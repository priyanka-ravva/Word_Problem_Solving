sentences:  ['Ram has 6 apples .', 'Sita has 7 apples .', 'How many apples are there altogether ?']
sentences information : 
['Ram has 6 apples .', 'Sita has 7 apples .']


Question Related Sentences : 
['How many apples are there altogether ?']


CC_resolve_pos_dict is  {0: {'Ram': 'NNP', 'has': 'VBZ', '6': 'CD', 'apples': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Ram': 'NNP', 'has': 'VBZ', '6': 'CD', 'apples': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Ram': 'NNP', 'has': 'VBZ', '6': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'Sita': 'NNP', 'has': 'VBZ', '7': 'CD', 'apples': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Ram': 'NNP', 'has': 'VBZ', '6': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'Sita': 'NNP', 'has': 'VBZ', '7': 'CD', 'apples': 'NNS', '.': '.'}}
Word tokens are ['How', 'many', 'apples', 'are', 'there', 'altogether', '?']
CC_resolve_pos_dict:  {0: {'Ram': 'NNP', 'has': 'VBZ', '6': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'Sita': 'NNP', 'has': 'VBZ', '7': 'CD', 'apples': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'apples': 'NNS', 'are': 'VBP', 'there': 'RB', 'altogether': 'RB', '?': '.'}}



processed_input:  ['Ram has 6 apples .', 'Sita has 7 apples .', 'How many apples are there altogether ?']




['Ram', 'has', '6', 'apples', '.'] 99 0

--------------------------

0 5 Ram 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['6', 'apples', '.']
Prp_Verb:  []
Entities:  ['apples']
PREverb is ['Ram']
Owners1 is ['Ram']
Owners2 is []
Entity_Values is ['6']
2 5 6 0 0
3 5 apples 0 0
4 5 . 0 0


['Sita', 'has', '7', 'apples', '.'] 99 1

--------------------------

0 5 Sita 1 1
1 5 has 1 1
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['7', 'apples', '.']
Prp_Verb:  []
Entities:  ['apples']
PREverb is ['Sita']
Owners1 is ['Sita']
Owners2 is []
Entity_Values is ['6', '7']
2 5 7 1 1
3 5 apples 1 1
4 5 . 1 1


['How', 'many', 'apples', 'are', 'there', 'altogether', '?'] 99 2

--------------------------

0 7 How 2 2
1 7 many 2 2
2 7 apples 2 2
3 7 are 2 2
after_verb_tags:  ['RB', 'RB', '.']
Averb:  ['there', 'altogether', '?']
Prp_Verb:  []
Entities:  ['apples']
PREverb is ['How', 'many', 'apples']
Owners1 is []
Owners2 is []
Entity_Values is ['6', '7']
4 7 there 2 2
5 7 altogether 2 2
6 7 ? 2 2





processed_information:  ['Ram has 6 apples .', 'Sita has 7 apples .']



schema Identification.....



possible_schemas and their sent's indices:  ['Combine'] [2]


Identified Unique Schemas:  {'Combine'}


In Combine: 

{'verb': ['are'], 'pre_verb': ['How', 'many', 'apples'], 'after_verb': ['there', 'altogether', '?'], 'prp_verb': [], 'Entities': ['apples'], 'Owners1': [], 'Owners2': [], 'Entity_Values': ['6', '7']}
Answer in Natural Language Processing....
They are/has 13 apples

----------------------------------------

sentences:  ['Scot has 6 marbles .', 'He finds 4 more marbles .', 'How many marbles does he have in all ?']
sentences information : 
['Scot has 6 marbles .', 'He finds 4 more marbles .']


Question Related Sentences : 
['How many marbles does he have in all ?']


CC_resolve_pos_dict is  {0: {'Scot': 'NNP', 'has': 'VBZ', '6': 'CD', 'marbles': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Scot': 'NNP', 'has': 'VBZ', '6': 'CD', 'marbles': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Scot': 'NNP', 'has': 'VBZ', '6': 'CD', 'marbles': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'finds': 'VBZ', '4': 'CD', 'more': 'JJR', 'marbles': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Scot': 'NNP', 'has': 'VBZ', '6': 'CD', 'marbles': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'finds': 'VBZ', '4': 'CD', 'more': 'JJR', 'marbles': 'NNS', '.': '.'}}
Word tokens are ['How', 'many', 'marbles', 'does', 'he', 'have', 'in', 'all', '?']
CC_resolve_pos_dict:  {0: {'Scot': 'NNP', 'has': 'VBZ', '6': 'CD', 'marbles': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'finds': 'VBZ', '4': 'CD', 'more': 'JJR', 'marbles': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'marbles': 'NNS', 'does': 'VBZ', 'he': 'PRP', 'have': 'VB', 'in': 'IN', 'all': 'DT', '?': '.'}}



processed_input:  ['Scot has 6 marbles .', 'He finds 4 more marbles .', 'How many marbles does he have in all ?']




['Scot', 'has', '6', 'marbles', '.'] 99 0

--------------------------

0 5 Scot 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['6', 'marbles', '.']
Prp_Verb:  []
Entities:  ['marbles']
PREverb is ['Scot']
Owners1 is ['Scot']
Owners2 is []
Entity_Values is ['6']
2 5 6 0 0
3 5 marbles 0 0
4 5 . 0 0


['He', 'finds', '4', 'more', 'marbles', '.'] 99 1

--------------------------

0 6 He 1 1
1 6 finds 1 1
after_verb_tags:  ['CD', 'JJR', 'NNS', '.']
Averb:  ['4', 'more', 'marbles', '.']
Prp_Verb:  []
Entities:  ['marbles']
PREverb is ['Scot']
Owners1 is ['Scot']
Owners2 is []
Entity_Values is ['6', '4']
2 6 4 1 1
3 6 more 1 1
4 6 marbles 1 1
5 6 . 1 1


['How', 'many', 'marbles', 'does', 'he', 'have', 'in', 'all', '?'] 99 2

--------------------------

0 9 How 2 2
1 9 many 2 2
2 9 marbles 2 2
3 9 does 2 2
after_verb_tags:  ['PRP', 'VB', 'IN', 'DT', '.']
Averb:  ['he', 'have']
Prp_Verb:  ['in', 'all', '?']
Entities:  ['marbles']
PREverb is ['How', 'many', 'marbles']
Owners1 is []
Owners2 is []
Entity_Values is ['6', '4']
4 9 he 2 2
5 9 have 2 2
after_verb_tags:  ['IN', 'DT', '.']
Averb:  []
Prp_Verb:  ['in', 'all', '?']
Entities:  ['marbles']
PREverb is ['Scot']
Owners1 is ['Scot']
Owners2 is []
Entity_Values is ['6', '4']
6 9 in 2 2
7 9 all 2 2
8 9 ? 2 2





processed_information:  ['Scot has 6 marbles .', 'He finds 4 more marbles .']



schema Identification.....



possible_schemas and their sent's indices:  ['Increase'] [1]


Identified Unique Schemas:  {'Increase'}


In Increase: 

{'verb': ['finds'], 'pre_verb': ['Scot'], 'after_verb': ['4', 'more', 'marbles', '.'], 'prp_verb': [], 'Entities': ['marbles'], 'Owners1': ['Scot'], 'Owners2': [], 'Entity_Values': ['6', '4']}
Answer in Natural Language Processing....
Scot finds/has 10 marbles

----------------------------------------

sentences:  ['Jeff has 5 bags .', 'He buys 5 more bags .', 'How many bags does he have in all ?']
sentences information : 
['Jeff has 5 bags .', 'He buys 5 more bags .']


Question Related Sentences : 
['How many bags does he have in all ?']


CC_resolve_pos_dict is  {0: {'Jeff': 'NNP', 'has': 'VBZ', '5': 'CD', 'bags': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Jeff': 'NNP', 'has': 'VBZ', '5': 'CD', 'bags': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Jeff': 'NNP', 'has': 'VBZ', '5': 'CD', 'bags': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'buys': 'VBZ', '5': 'CD', 'more': 'JJR', 'bags': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Jeff': 'NNP', 'has': 'VBZ', '5': 'CD', 'bags': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'buys': 'VBZ', '5': 'CD', 'more': 'JJR', 'bags': 'NNS', '.': '.'}}
Word tokens are ['How', 'many', 'bags', 'does', 'he', 'have', 'in', 'all', '?']
CC_resolve_pos_dict:  {0: {'Jeff': 'NNP', 'has': 'VBZ', '5': 'CD', 'bags': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'buys': 'VBZ', '5': 'CD', 'more': 'JJR', 'bags': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'bags': 'NN', 'does': 'VBZ', 'he': 'PRP', 'have': 'VB', 'in': 'IN', 'all': 'DT', '?': '.'}}



processed_input:  ['Jeff has 5 bags .', 'He buys 5 more bags .', 'How many bags does he have in all ?']




['Jeff', 'has', '5', 'bags', '.'] 99 0

--------------------------

0 5 Jeff 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['5', 'bags', '.']
Prp_Verb:  []
Entities:  ['bags']
PREverb is ['Jeff']
Owners1 is ['Jeff']
Owners2 is []
Entity_Values is ['5']
2 5 5 0 0
3 5 bags 0 0
4 5 . 0 0


['He', 'buys', '5', 'more', 'bags', '.'] 99 1

--------------------------

0 6 He 1 1
1 6 buys 1 1
after_verb_tags:  ['CD', 'JJR', 'NNS', '.']
Averb:  ['5', 'more', 'bags', '.']
Prp_Verb:  []
Entities:  ['bags']
PREverb is ['Jeff']
Owners1 is ['Jeff']
Owners2 is []
Entity_Values is ['5', '5']
2 6 5 1 1
3 6 more 1 1
4 6 bags 1 1
5 6 . 1 1


['How', 'many', 'bags', 'does', 'he', 'have', 'in', 'all', '?'] 99 2

--------------------------

0 9 How 2 2
1 9 many 2 2
2 9 bags 2 2
3 9 does 2 2
after_verb_tags:  ['PRP', 'VB', 'IN', 'DT', '.']
Averb:  ['he', 'have']
Prp_Verb:  ['in', 'all', '?']
Entities:  ['bags']
PREverb is ['How', 'many', 'bags']
Owners1 is ['bags']
Owners2 is []
Entity_Values is ['5', '5']
4 9 he 2 2
5 9 have 2 2
after_verb_tags:  ['IN', 'DT', '.']
Averb:  []
Prp_Verb:  ['in', 'all', '?']
Entities:  ['bags']
PREverb is ['Jeff']
Owners1 is ['bags', 'Jeff']
Owners2 is []
Entity_Values is ['5', '5']
6 9 in 2 2
7 9 all 2 2
8 9 ? 2 2





processed_information:  ['Jeff has 5 bags .', 'He buys 5 more bags .']



schema Identification.....



possible_schemas and their sent's indices:  ['Change_In'] [1]


Identified Unique Schemas:  {'Change_In'}


In Change_In: 

{'verb': ['buys'], 'pre_verb': ['Jeff'], 'after_verb': ['5', 'more', 'bags', '.'], 'prp_verb': [], 'Entities': ['bags'], 'Owners1': ['Jeff'], 'Owners2': [], 'Entity_Values': ['5', '5']}
Answer in Natural Language Processing....
Jeff buys 10 bags

----------------------------------------

sentences:  ['John buys 11 peaches .', 'He eats 9 peaches .', 'How many does John have now ?']
sentences information : 
['John buys 11 peaches .', 'He eats 9 peaches .']


Question Related Sentences : 
['How many does John have now ?']


CC_resolve_pos_dict is  {0: {'John': 'NNP', 'buys': 'VBZ', '11': 'CD', 'peaches': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'John': 'NNP', 'buys': 'VBZ', '11': 'CD', 'peaches': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'John': 'NNP', 'buys': 'VBZ', '11': 'CD', 'peaches': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'eats': 'VBZ', '9': 'CD', 'peaches': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'John': 'NNP', 'buys': 'VBZ', '11': 'CD', 'peaches': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'eats': 'VBZ', '9': 'CD', 'peaches': 'NNS', '.': '.'}}
Word tokens are ['How', 'many', 'does', 'John', 'have', 'now', '?']
CC_resolve_pos_dict:  {0: {'John': 'NNP', 'buys': 'VBZ', '11': 'CD', 'peaches': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'eats': 'VBZ', '9': 'CD', 'peaches': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'does': 'VBZ', 'John': 'NNP', 'have': 'VB', 'now': 'RB', '?': '.'}}



processed_input:  ['John buys 11 peaches .', 'He eats 9 peaches .', 'How many does John have now ?']




['John', 'buys', '11', 'peaches', '.'] 99 0

--------------------------

0 5 John 0 0
1 5 buys 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['11', 'peaches', '.']
Prp_Verb:  []
Entities:  ['peaches']
PREverb is ['John']
Owners1 is ['John']
Owners2 is []
Entity_Values is ['11']
2 5 11 0 0
3 5 peaches 0 0
4 5 . 0 0


['He', 'eats', '9', 'peaches', '.'] 99 1

--------------------------

0 5 He 1 1
1 5 eats 1 1
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['9', 'peaches', '.']
Prp_Verb:  []
Entities:  ['peaches']
PREverb is ['John']
Owners1 is ['John']
Owners2 is []
Entity_Values is ['11', '9']
2 5 9 1 1
3 5 peaches 1 1
4 5 . 1 1


['How', 'many', 'does', 'John', 'have', 'now', '?'] 99 2

--------------------------

0 7 How 2 2
1 7 many 2 2
2 7 does 2 2
after_verb_tags:  ['NNP', 'VB', 'RB', '.']
Averb:  ['John', 'have', 'now', '?']
Prp_Verb:  []
Entities:  ['peaches']
PREverb is ['How', 'many']
Owners1 is []
Owners2 is ['John']
Entity_Values is ['11', '9']
3 7 John 2 2
4 7 have 2 2
after_verb_tags:  ['RB', '.']
Averb:  ['now', '?']
Prp_Verb:  []
Entities:  ['peaches']
PREverb is ['How', 'many', 'does', 'John']
Owners1 is ['John']
Owners2 is []
Entity_Values is ['11', '9']
5 7 now 2 2
6 7 ? 2 2





processed_information:  ['John buys 11 peaches .', 'He eats 9 peaches .']



schema Identification.....



possible_schemas and their sent's indices:  ['Reduction', 'Change_In'] [1, 0]


Identified Unique Schemas:  {'Change_In', 'Reduction'}


In Change_In: 

{'verb': ['eats'], 'pre_verb': ['John'], 'after_verb': ['9', 'peaches', '.'], 'prp_verb': [], 'Entities': ['peaches'], 'Owners1': ['John'], 'Owners2': [], 'Entity_Values': ['11', '9']}
Answer in Natural Language Processing....
John eats 20 peaches

----------------------------------------

In Reduction: 

{'verb': ['eats'], 'pre_verb': ['John'], 'after_verb': ['9', 'peaches', '.'], 'prp_verb': [], 'Entities': ['peaches'], 'Owners1': ['John'], 'Owners2': [], 'Entity_Values': ['11', '9']}
Answer in Natural Language Processing....
John eats/has 2 peaches

----------------------------------------

sentences:  ['Sidd has 11 books .', 'Paul has 9 books .', 'How many books do they have altogether ?']
sentences information : 
['Sidd has 11 books .', 'Paul has 9 books .']


Question Related Sentences : 
['How many books do they have altogether ?']


CC_resolve_pos_dict is  {0: {'Sidd': 'NNP', 'has': 'VBZ', '11': 'CD', 'books': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Sidd': 'NNP', 'has': 'VBZ', '11': 'CD', 'books': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Sidd': 'NNP', 'has': 'VBZ', '11': 'CD', 'books': 'NNS', '.': '.'}, 1: {'Paul': 'NNP', 'has': 'VBZ', '9': 'CD', 'books': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Sidd': 'NNP', 'has': 'VBZ', '11': 'CD', 'books': 'NNS', '.': '.'}, 1: {'Paul': 'NNP', 'has': 'VBZ', '9': 'CD', 'books': 'NNS', '.': '.'}}
Word tokens are ['How', 'many', 'books', 'do', 'they', 'have', 'altogether', '?']
CC_resolve_pos_dict:  {0: {'Sidd': 'NNP', 'has': 'VBZ', '11': 'CD', 'books': 'NNS', '.': '.'}, 1: {'Paul': 'NNP', 'has': 'VBZ', '9': 'CD', 'books': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'books': 'NNS', 'do': 'VBP', 'they': 'PRP', 'have': 'VB', 'altogether': 'RB', '?': '.'}}



processed_input:  ['Sidd has 11 books .', 'Paul has 9 books .', 'How many books do they have altogether ?']




['Sidd', 'has', '11', 'books', '.'] 99 0

--------------------------

0 5 Sidd 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['11', 'books', '.']
Prp_Verb:  []
Entities:  ['books']
PREverb is ['Sidd']
Owners1 is ['Sidd']
Owners2 is []
Entity_Values is ['11']
2 5 11 0 0
3 5 books 0 0
4 5 . 0 0


['Paul', 'has', '9', 'books', '.'] 99 1

--------------------------

0 5 Paul 1 1
1 5 has 1 1
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['9', 'books', '.']
Prp_Verb:  []
Entities:  ['books']
PREverb is ['Paul']
Owners1 is ['Paul']
Owners2 is []
Entity_Values is ['11', '9']
2 5 9 1 1
3 5 books 1 1
4 5 . 1 1


['How', 'many', 'books', 'do', 'they', 'have', 'altogether', '?'] 99 2

--------------------------

0 8 How 2 2
1 8 many 2 2
2 8 books 2 2
3 8 do 2 2
after_verb_tags:  ['PRP', 'VB', 'RB', '.']
Averb:  ['they', 'have', 'altogether', '?']
Prp_Verb:  []
Entities:  ['books']
PREverb is ['How', 'many', 'books']
Owners1 is []
Owners2 is []
Entity_Values is ['11', '9']
4 8 they 2 2
5 8 have 2 2
after_verb_tags:  ['RB', '.']
Averb:  ['altogether', '?']
Prp_Verb:  []
Entities:  ['books']
PREverb is ['Paul']
Owners1 is ['Paul']
Owners2 is []
Entity_Values is ['11', '9']
6 8 altogether 2 2
7 8 ? 2 2





processed_information:  ['Sidd has 11 books .', 'Paul has 9 books .']



schema Identification.....



possible_schemas and their sent's indices:  ['Combine'] [2]


Identified Unique Schemas:  {'Combine'}


In Combine: 

{'verb': ['have'], 'pre_verb': ['Paul'], 'after_verb': ['altogether', '?'], 'prp_verb': [], 'Entities': ['books'], 'Owners1': ['Paul'], 'Owners2': [], 'Entity_Values': ['11', '9']}
Answer in Natural Language Processing....
Paul have/has 20 books

----------------------------------------

sentences:  ['Lee has 4 cups .', 'His brother takes away 3 cups from Lee .', 'How many cups does Lee have ?']
sentences information : 
['Lee has 4 cups .', 'His brother takes away 3 cups from Lee .']


Question Related Sentences : 
['How many cups does Lee have ?']


CC_resolve_pos_dict is  {0: {'Lee': 'NNP', 'has': 'VBZ', '4': 'CD', 'cups': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Lee': 'NNP', 'has': 'VBZ', '4': 'CD', 'cups': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Lee': 'NNP', 'has': 'VBZ', '4': 'CD', 'cups': 'NNS', '.': '.'}, 1: {'His': 'PRP$', 'brother': 'NN', 'takes': 'VBZ', 'away': 'RB', '3': 'CD', 'cups': 'NNS', 'from': 'IN', 'Lee': 'NNP', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Lee': 'NNP', 'has': 'VBZ', '4': 'CD', 'cups': 'NNS', '.': '.'}, 1: {'His': 'PRP$', 'brother': 'NN', 'takes': 'VBZ', 'away': 'RB', '3': 'CD', 'cups': 'NNS', 'from': 'IN', 'Lee': 'NNP', '.': '.'}}
Word tokens are ['How', 'many', 'cups', 'does', 'Lee', 'have', '?']
CC_resolve_pos_dict:  {0: {'Lee': 'NNP', 'has': 'VBZ', '4': 'CD', 'cups': 'NNS', '.': '.'}, 1: {'His': 'PRP$', 'brother': 'NN', 'takes': 'VBZ', 'away': 'RB', '3': 'CD', 'cups': 'NNS', 'from': 'IN', 'Lee': 'NNP', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'cups': 'NN', 'does': 'VBZ', 'Lee': 'NNP', 'have': 'VB', '?': '.'}}



processed_input:  ['Lee has 4 cups .', 'His brother takes away 3 cups from Lee .', 'How many cups does Lee have ?']




['Lee', 'has', '4', 'cups', '.'] 99 0

--------------------------

0 5 Lee 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['4', 'cups', '.']
Prp_Verb:  []
Entities:  ['cups']
PREverb is ['Lee']
Owners1 is ['Lee']
Owners2 is []
Entity_Values is ['4']
2 5 4 0 0
3 5 cups 0 0
4 5 . 0 0


['His', 'brother', 'takes', 'away', '3', 'cups', 'from', 'Lee', '.'] 99 1

--------------------------

0 9 His 1 1
1 9 brother 1 1
2 9 takes 1 1
after_verb_tags:  ['RB', 'CD', 'NNS', 'IN', 'NNP', '.']
Averb:  ['away', '3', 'cups']
Prp_Verb:  ['from', 'Lee', '.']
Entities:  ['cups']
PREverb is ['Lee']
Owners1 is ['Lee', 'brother']
Owners2 is ['Lee']
Entity_Values is ['4', '3']
3 9 away 1 1
4 9 3 1 1
5 9 cups 1 1
6 9 from 1 1
7 9 Lee 1 1
8 9 . 1 1


['How', 'many', 'cups', 'does', 'Lee', 'have', '?'] 99 2

--------------------------

0 7 How 2 2
1 7 many 2 2
2 7 cups 2 2
3 7 does 2 2
after_verb_tags:  ['NNP', 'VB', '.']
Averb:  ['Lee', 'have', '?']
Prp_Verb:  []
Entities:  ['cups']
PREverb is ['How', 'many', 'cups']
Owners1 is ['cups']
Owners2 is ['Lee']
Entity_Values is ['4', '3']
4 7 Lee 2 2
5 7 have 2 2
after_verb_tags:  ['.']
Averb:  ['?']
Prp_Verb:  []
Entities:  ['cups']
PREverb is ['How', 'many', 'cups', 'does', 'Lee']
Owners1 is ['cups', 'Lee']
Owners2 is []
Entity_Values is ['4', '3']
6 7 ? 2 2





processed_information:  ['Lee has 4 cups .', 'His brother takes away 3 cups from Lee .']



schema Identification.....



possible_schemas and their sent's indices:  ['Change_Out', 'Change_Out', 'Change_Out', 'Change_Out', 'Change_Out', 'Change_Out', 'Change_Out'] [1, 1, 1, 1, 1, 1, 1]


Identified Unique Schemas:  {'Change_Out'}


In Change Out: 

{'verb': ['takes'], 'pre_verb': ['Lee'], 'after_verb': ['away', '3', 'cups'], 'prp_verb': ['from', 'Lee', '.'], 'Entities': ['cups'], 'Owners1': ['Lee', 'brother'], 'Owners2': ['Lee'], 'Entity_Values': ['4', '3']}
Answer in Natural Language Processing....
Lee takes/has 1 cups

----------------------------------------

sentences:  ['Sam has 8 pencils .', 'He finds 11 more pencils .', 'How many pencils does he have in all ?']
sentences information : 
['Sam has 8 pencils .', 'He finds 11 more pencils .']


Question Related Sentences : 
['How many pencils does he have in all ?']


CC_resolve_pos_dict is  {0: {'Sam': 'NNP', 'has': 'VBZ', '8': 'CD', 'pencils': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Sam': 'NNP', 'has': 'VBZ', '8': 'CD', 'pencils': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Sam': 'NNP', 'has': 'VBZ', '8': 'CD', 'pencils': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'finds': 'VBZ', '11': 'CD', 'more': 'JJR', 'pencils': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Sam': 'NNP', 'has': 'VBZ', '8': 'CD', 'pencils': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'finds': 'VBZ', '11': 'CD', 'more': 'JJR', 'pencils': 'NNS', '.': '.'}}
Word tokens are ['How', 'many', 'pencils', 'does', 'he', 'have', 'in', 'all', '?']
CC_resolve_pos_dict:  {0: {'Sam': 'NNP', 'has': 'VBZ', '8': 'CD', 'pencils': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'finds': 'VBZ', '11': 'CD', 'more': 'JJR', 'pencils': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'pencils': 'NNS', 'does': 'VBZ', 'he': 'PRP', 'have': 'VB', 'in': 'IN', 'all': 'DT', '?': '.'}}



processed_input:  ['Sam has 8 pencils .', 'He finds 11 more pencils .', 'How many pencils does he have in all ?']




['Sam', 'has', '8', 'pencils', '.'] 99 0

--------------------------

0 5 Sam 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['8', 'pencils', '.']
Prp_Verb:  []
Entities:  ['pencils']
PREverb is ['Sam']
Owners1 is ['Sam']
Owners2 is []
Entity_Values is ['8']
2 5 8 0 0
3 5 pencils 0 0
4 5 . 0 0


['He', 'finds', '11', 'more', 'pencils', '.'] 99 1

--------------------------

0 6 He 1 1
1 6 finds 1 1
after_verb_tags:  ['CD', 'JJR', 'NNS', '.']
Averb:  ['11', 'more', 'pencils', '.']
Prp_Verb:  []
Entities:  ['pencils']
PREverb is ['Sam']
Owners1 is ['Sam']
Owners2 is []
Entity_Values is ['8', '11']
2 6 11 1 1
3 6 more 1 1
4 6 pencils 1 1
5 6 . 1 1


['How', 'many', 'pencils', 'does', 'he', 'have', 'in', 'all', '?'] 99 2

--------------------------

0 9 How 2 2
1 9 many 2 2
2 9 pencils 2 2
3 9 does 2 2
after_verb_tags:  ['PRP', 'VB', 'IN', 'DT', '.']
Averb:  ['he', 'have']
Prp_Verb:  ['in', 'all', '?']
Entities:  ['pencils']
PREverb is ['How', 'many', 'pencils']
Owners1 is []
Owners2 is []
Entity_Values is ['8', '11']
4 9 he 2 2
5 9 have 2 2
after_verb_tags:  ['IN', 'DT', '.']
Averb:  []
Prp_Verb:  ['in', 'all', '?']
Entities:  ['pencils']
PREverb is ['Sam']
Owners1 is ['Sam']
Owners2 is []
Entity_Values is ['8', '11']
6 9 in 2 2
7 9 all 2 2
8 9 ? 2 2





processed_information:  ['Sam has 8 pencils .', 'He finds 11 more pencils .']



schema Identification.....



possible_schemas and their sent's indices:  ['Increase'] [1]


Identified Unique Schemas:  {'Increase'}


In Increase: 

{'verb': ['finds'], 'pre_verb': ['Sam'], 'after_verb': ['11', 'more', 'pencils', '.'], 'prp_verb': [], 'Entities': ['pencils'], 'Owners1': ['Sam'], 'Owners2': [], 'Entity_Values': ['8', '11']}
Answer in Natural Language Processing....
Sam finds/has 19 pencils

----------------------------------------

sentences:  ['David gave 3 candies to Ruth and John gave 2 candies to David .', 'Now David has 4 candies more than Ruth has .', 'How many candies does David have now if Ruth had 7 candies in the beginning ?']
sentences information : 
['David gave 3 candies to Ruth and John gave 2 candies to David .', 'Now David has 4 candies more than Ruth has .']


Question Related Sentences : 
['How many candies does David have now if Ruth had 7 candies in the beginning ?']


CC_resolve_pos_dict is  {0: {'David': 'NNP', 'gave': 'VBD', '3': 'CD', 'candies': 'NNS', 'to': 'TO', 'Ruth': 'NNP', 'and': 'CC', 'John': 'NNP', '2': 'CD', '.': '.'}}



Original_resolve_pos_dict is  {0: {'David': 'NNP', 'gave': 'VBD', '3': 'CD', 'candies': 'NNS', 'to': 'TO', 'Ruth': 'NNP', 'and': 'CC', 'John': 'NNP', '2': 'CD', '.': '.'}}
Going to CC_Resolve module: 0
CC_resolve_pos_dict is  {0: {'David': 'NNP', 'gave': 'VBD', '3': 'CD', 'candies': 'NNS', 'to': 'TO', 'Ruth': 'NNP', 'and': 'CC', 'John': 'NNP', '2': 'CD', '.': '.'}}





Modified sentence at Conjunction Resolve module is:
 David gave 3 candies to Ruth . John gave 2 candies to David 
CC_resolve_pos_dict is  {0: {'David': 'NNP', 'gave': 'VBD', '3': 'CD', 'candies': 'NNS', 'to': 'TO', 'Ruth': 'NNP', 'and': 'CC', 'John': 'NNP', '2': 'CD', '.': '.'}, 1: {'Now': 'RB', 'David': 'NNP', 'has': 'VBZ', '4': 'CD', 'candies': 'NNS', 'more': 'RBR', 'than': 'IN', 'Ruth': 'NNP', '.': '.'}}



Original_resolve_pos_dict is  {0: {'David': 'NNP', 'gave': 'VBD', '3': 'CD', 'candies': 'NNS', 'to': 'TO', 'Ruth': 'NNP', 'and': 'CC', 'John': 'NNP', '2': 'CD', '.': '.'}, 1: {'Now': 'RB', 'David': 'NNP', 'has': 'VBZ', '4': 'CD', 'candies': 'NNS', 'more': 'RBR', 'than': 'IN', 'Ruth': 'NNP', '.': '.'}}
Word tokens are ['How', 'many', 'candies', 'does', 'David', 'have', 'now', 'if', 'Ruth', 'had', '7', 'candies', 'in', 'the', 'beginning', '?']
CC_resolve_pos_dict:  {0: {'David': 'NNP', 'gave': 'VBD', '3': 'CD', 'candies': 'NNS', 'to': 'TO', 'Ruth': 'NNP', 'and': 'CC', 'John': 'NNP', '2': 'CD', '.': '.'}, 1: {'Now': 'RB', 'David': 'NNP', 'has': 'VBZ', '4': 'CD', 'candies': 'NNS', 'more': 'RBR', 'than': 'IN', 'Ruth': 'NNP', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'candies': 'NNS', 'does': 'VBZ', 'David': 'NNP', 'have': 'VB', 'now': 'RB', 'if': 'IN', 'Ruth': 'NNP', 'had': 'VBD', '7': 'CD', 'in': 'IN', 'the': 'DT', 'beginning': 'NN', '?': '.'}}



processed_input:  ['David gave 3 candies to Ruth ', ' John gave 2 candies to David ', 'Now David has 4 candies more than Ruth has .', 'How many candies does David have now if Ruth had 7 candies in the beginning ?']




['David', 'gave', '3', 'candies', 'to', 'Ruth'] 0 0

--------------------------

0 6 David 0 0
1 6 gave 0 0
after_verb_tags:  ['CD', 'NNS', 'TO', 'NNP']
Averb:  ['3', 'candies']
Prp_Verb:  ['to', 'Ruth']
Entities:  ['candies']
PREverb is ['David']
Owners1 is ['David']
Owners2 is ['Ruth']
Entity_Values is ['3']
2 6 3 0 0
3 6 candies 0 0
4 6 to 0 0
5 6 Ruth 0 0


['John', 'gave', '2', 'candies', 'to', 'David'] 0 1

--------------------------

0 6 John 0 1
1 6 gave 0 1
after_verb_tags:  ['CD', 'NNS', 'TO', 'NNP']
Averb:  ['2', 'candies']
Prp_Verb:  ['to', 'David']
Entities:  ['candies']
PREverb is ['John']
Owners1 is ['John']
Owners2 is ['David']
Entity_Values is ['3', '2']
2 6 2 0 1
3 6 candies 0 1
4 6 to 0 1
5 6 David 0 1


['Now', 'David', 'has', '4', 'candies', 'more', 'than', 'Ruth', 'has', '.'] 0 2

--------------------------

0 10 Now 1 2
1 10 David 1 2
2 10 has 1 2
after_verb_tags:  ['CD', 'NNS', 'RBR', 'IN', 'NNP', 'VBZ', '.']
Averb:  ['4', 'candies', 'more']
Prp_Verb:  ['than', 'Ruth', 'has', '.']
Entities:  ['candies']
PREverb is ['Now', 'David']
Owners1 is ['David']
Owners2 is ['Ruth']
Entity_Values is ['3', '2', '4']
3 10 4 1 2
4 10 candies 1 2
5 10 more 1 2
6 10 than 1 2
7 10 Ruth 1 2
8 10 has 1 2
after_verb_tags:  ['.']
Averb:  ['.']
Prp_Verb:  []
Entities:  ['candies']
PREverb is ['Now', 'David', 'has', '4', 'candies', 'more', 'than', 'Ruth']
Owners1 is ['David', 'Ruth']
Owners2 is []
Entity_Values is ['3', '2', '4']
9 10 . 1 2


['How', 'many', 'candies', 'does', 'David', 'have', 'now', 'if', 'Ruth', 'had', '7', 'candies', 'in', 'the', 'beginning', '?'] 0 3

--------------------------

0 16 How 2 3
1 16 many 2 3
2 16 candies 2 3
3 16 does 2 3
after_verb_tags:  ['NNP', 'VB', 'RB', 'IN', 'NNP', 'VBD', 'CD', 'NNS', 'IN', 'DT', 'NN', '.']
Averb:  ['David', 'have', 'now']
Prp_Verb:  ['if', 'Ruth', 'had', '7', 'candies', 'in', 'the', 'beginning', '?']
Entities:  ['candies']
PREverb is ['How', 'many', 'candies']
Owners1 is []
Owners2 is ['David', 'Ruth']
Entity_Values is ['3', '2', '4', 'if']
4 16 David 2 3
5 16 have 2 3
after_verb_tags:  ['RB', 'IN', 'NNP', 'VBD', 'CD', 'NNS', 'IN', 'DT', 'NN', '.']
Averb:  ['now']
Prp_Verb:  ['if', 'Ruth', 'had', '7', 'candies', 'in', 'the', 'beginning', '?']
Entities:  ['candies']
PREverb is ['How', 'many', 'candies', 'does', 'David']
Owners1 is ['David']
Owners2 is ['Ruth']
Entity_Values is ['3', '2', '4', 'if', 'if']
6 16 now 2 3
7 16 if 2 3
8 16 Ruth 2 3
9 16 had 2 3
after_verb_tags:  ['CD', 'NNS', 'IN', 'DT', 'NN', '.']
Averb:  ['7', 'candies']
Prp_Verb:  ['in', 'the', 'beginning', '?']
Entities:  ['candies']
PREverb is ['How', 'many', 'candies', 'does', 'David', 'have', 'now', 'if', 'Ruth']
Owners1 is ['David', 'Ruth']
Owners2 is []
Entity_Values is ['3', '2', '4', 'if', 'if', '7']
10 16 7 2 3
11 16 candies 2 3
12 16 in 2 3
13 16 the 2 3
14 16 beginning 2 3
15 16 ? 2 3





processed_information:  ['David gave 3 candies to Ruth ', ' John gave 2 candies to David ', 'Now David has 4 candies more than Ruth has .']



schema Identification.....



possible_schemas and their sent's indices:  ['Change_Out', 'Change_Out', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus'] [0, 1, 2, 2, 2, 2, 2, 2, 2]


Identified Unique Schemas:  {'Change_Out', 'Compare_Plus'}


In Change Out: 

{'verb': ['gave'], 'pre_verb': ['David'], 'after_verb': ['3', 'candies'], 'prp_verb': ['to', 'Ruth'], 'Entities': ['candies'], 'Owners1': ['David'], 'Owners2': ['Ruth'], 'Entity_Values': ['3', '2', '4', 'if', 'if', '7']}
Answer in Natural Language Processing....
David gave/has 1 candies

----------------------------------------

In Compare_Plus: 

{'verb': ['gave'], 'pre_verb': ['David'], 'after_verb': ['3', 'candies'], 'prp_verb': ['to', 'Ruth'], 'Entities': ['candies'], 'Owners1': ['David'], 'Owners2': ['Ruth'], 'Entity_Values': ['3', '2', '4', 'if', 'if', '7']}
Answer in Natural Language Processing....
David gave/has 5 candies

----------------------------------------

sentences:  ['Ruth had 3 apples .', 'She put 2 apples into a basket .', 'How many apples are there in the basket now if in the beginning there were 4 apples in the basket ?']
sentences information : 
['Ruth had 3 apples .', 'She put 2 apples into a basket .']


Question Related Sentences : 
['How many apples are there in the basket now if in the beginning there were 4 apples in the basket ?']


CC_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'had': 'VBD', '3': 'CD', 'apples': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'had': 'VBD', '3': 'CD', 'apples': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'had': 'VBD', '3': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'She': 'PRP', 'put': 'VBD', '2': 'CD', 'apples': 'NNS', 'into': 'IN', 'a': 'DT', 'basket': 'NN', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'had': 'VBD', '3': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'She': 'PRP', 'put': 'VBD', '2': 'CD', 'apples': 'NNS', 'into': 'IN', 'a': 'DT', 'basket': 'NN', '.': '.'}}
Word tokens are ['How', 'many', 'apples', 'are', 'there', 'in', 'the', 'basket', 'now', 'if', 'in', 'the', 'beginning', 'there', 'were', '4', 'apples', 'in', 'the', 'basket', '?']
CC_resolve_pos_dict:  {0: {'Ruth': 'NNP', 'had': 'VBD', '3': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'She': 'PRP', 'put': 'VBD', '2': 'CD', 'apples': 'NNS', 'into': 'IN', 'a': 'DT', 'basket': 'NN', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'apples': 'NNS', 'are': 'VBP', 'there': 'EX', 'in': 'IN', 'the': 'DT', 'basket': 'NN', 'now': 'RB', 'if': 'IN', 'beginning': 'NN', 'were': 'VBD', '4': 'CD', '?': '.'}}



processed_input:  ['Ruth had 3 apples .', 'She put 2 apples into a basket .', 'How many apples are there in the basket now if in the beginning there were 4 apples in the basket ?']




['Ruth', 'had', '3', 'apples', '.'] 99 0

--------------------------

0 5 Ruth 0 0
1 5 had 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['3', 'apples', '.']
Prp_Verb:  []
Entities:  ['apples']
PREverb is ['Ruth']
Owners1 is ['Ruth']
Owners2 is []
Entity_Values is ['3']
2 5 3 0 0
3 5 apples 0 0
4 5 . 0 0


['She', 'put', '2', 'apples', 'into', 'a', 'basket', '.'] 99 1

--------------------------

0 8 She 1 1
1 8 put 1 1
after_verb_tags:  ['CD', 'NNS', 'IN', 'DT', 'NN', '.']
Averb:  ['2', 'apples']
Prp_Verb:  ['into', 'a', 'basket', '.']
Entities:  ['apples']
PREverb is ['Ruth']
Owners1 is ['Ruth']
Owners2 is []
Entity_Values is ['3', '2']
2 8 2 1 1
3 8 apples 1 1
4 8 into 1 1
5 8 a 1 1
6 8 basket 1 1
7 8 . 1 1


['How', 'many', 'apples', 'are', 'there', 'in', 'the', 'basket', 'now', 'if', 'in', 'the', 'beginning', 'there', 'were', '4', 'apples', 'in', 'the', 'basket', '?'] 99 2

--------------------------

0 21 How 2 2
1 21 many 2 2
2 21 apples 2 2
3 21 are 2 2
after_verb_tags:  ['EX', 'IN', 'DT', 'NN', 'RB', 'IN', 'IN', 'DT', 'NN', 'EX', 'VBD', 'CD', 'NNS', 'IN', 'DT', 'NN', '.']
Averb:  ['there']
Prp_Verb:  ['in', 'the', 'basket', 'now', 'if', 'in', 'the', 'beginning', 'there', 'were', '4', 'apples', 'in', 'the', 'basket', '?']
Entities:  ['apples']
PREverb is ['How', 'many', 'apples']
Owners1 is []
Owners2 is []
Entity_Values is ['3', '2', 'in']
4 21 there 2 2
5 21 in 2 2
6 21 the 2 2
7 21 basket 2 2
8 21 now 2 2
9 21 if 2 2
10 21 in 2 2
11 21 the 2 2
12 21 beginning 2 2
13 21 there 2 2
14 21 were 2 2
after_verb_tags:  ['CD', 'NNS', 'IN', 'DT', 'NN', '.']
Averb:  ['4', 'apples']
Prp_Verb:  ['in', 'the', 'basket', '?']
Entities:  ['apples']
PREverb is ['How', 'many', 'apples', 'are', 'there', 'in', 'the', 'basket', 'now', 'if', 'in', 'the', 'beginning', 'there']
Owners1 is ['basket', 'beginning']
Owners2 is []
Entity_Values is ['3', '2', 'in', '4']
15 21 4 2 2
16 21 apples 2 2
17 21 in 2 2
18 21 the 2 2
19 21 basket 2 2
20 21 ? 2 2





processed_information:  ['Ruth had 3 apples .', 'She put 2 apples into a basket .']



schema Identification.....



possible_schemas and their sent's indices:  ['Change_Out'] [1]


Identified Unique Schemas:  {'Change_Out'}


In Change Out: 

{'verb': ['put'], 'pre_verb': ['Ruth'], 'after_verb': ['2', 'apples'], 'prp_verb': ['into', 'a', 'basket', '.'], 'Entities': ['apples'], 'Owners1': ['Ruth'], 'Owners2': [], 'Entity_Values': ['3', '2', 'in', '4']}
Answer in Natural Language Processing....
Ruth put/has 1 apples

----------------------------------------

sentences:  ['Ruth had 5 nuts more than Dan .', 'Dan has 3 nuts .', 'How many nuts does Ruth have now ?']
sentences information : 
['Ruth had 5 nuts more than Dan .', 'Dan has 3 nuts .']


Question Related Sentences : 
['How many nuts does Ruth have now ?']


CC_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'had': 'VBD', '5': 'CD', 'nuts': 'NNS', 'more': 'JJR', 'than': 'IN', 'Dan': 'NNP', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'had': 'VBD', '5': 'CD', 'nuts': 'NNS', 'more': 'JJR', 'than': 'IN', 'Dan': 'NNP', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'had': 'VBD', '5': 'CD', 'nuts': 'NNS', 'more': 'JJR', 'than': 'IN', 'Dan': 'NNP', '.': '.'}, 1: {'Dan': 'NNP', 'has': 'VBZ', '3': 'CD', 'nuts': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'had': 'VBD', '5': 'CD', 'nuts': 'NNS', 'more': 'JJR', 'than': 'IN', 'Dan': 'NNP', '.': '.'}, 1: {'Dan': 'NNP', 'has': 'VBZ', '3': 'CD', 'nuts': 'NNS', '.': '.'}}
Word tokens are ['How', 'many', 'nuts', 'does', 'Ruth', 'have', 'now', '?']
CC_resolve_pos_dict:  {0: {'Ruth': 'NNP', 'had': 'VBD', '5': 'CD', 'nuts': 'NNS', 'more': 'JJR', 'than': 'IN', 'Dan': 'NNP', '.': '.'}, 1: {'Dan': 'NNP', 'has': 'VBZ', '3': 'CD', 'nuts': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'nuts': 'NNS', 'does': 'VBZ', 'Ruth': 'NNP', 'have': 'VB', 'now': 'RB', '?': '.'}}



processed_input:  ['Ruth had 5 nuts more than Dan .', 'Dan has 3 nuts .', 'How many nuts does Ruth have now ?']




['Ruth', 'had', '5', 'nuts', 'more', 'than', 'Dan', '.'] 99 0

--------------------------

0 8 Ruth 0 0
1 8 had 0 0
after_verb_tags:  ['CD', 'NNS', 'JJR', 'IN', 'NNP', '.']
Averb:  ['5', 'nuts', 'more']
Prp_Verb:  ['than', 'Dan', '.']
Entities:  ['nuts']
PREverb is ['Ruth']
Owners1 is ['Ruth']
Owners2 is ['Dan']
Entity_Values is ['5']
2 8 5 0 0
3 8 nuts 0 0
4 8 more 0 0
5 8 than 0 0
6 8 Dan 0 0
7 8 . 0 0


['Dan', 'has', '3', 'nuts', '.'] 99 1

--------------------------

0 5 Dan 1 1
1 5 has 1 1
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['3', 'nuts', '.']
Prp_Verb:  []
Entities:  ['nuts']
PREverb is ['Dan']
Owners1 is ['Dan']
Owners2 is []
Entity_Values is ['5', '3']
2 5 3 1 1
3 5 nuts 1 1
4 5 . 1 1


['How', 'many', 'nuts', 'does', 'Ruth', 'have', 'now', '?'] 99 2

--------------------------

0 8 How 2 2
1 8 many 2 2
2 8 nuts 2 2
3 8 does 2 2
after_verb_tags:  ['NNP', 'VB', 'RB', '.']
Averb:  ['Ruth', 'have', 'now', '?']
Prp_Verb:  []
Entities:  ['nuts']
PREverb is ['How', 'many', 'nuts']
Owners1 is []
Owners2 is ['Ruth']
Entity_Values is ['5', '3']
4 8 Ruth 2 2
5 8 have 2 2
after_verb_tags:  ['RB', '.']
Averb:  ['now', '?']
Prp_Verb:  []
Entities:  ['nuts']
PREverb is ['How', 'many', 'nuts', 'does', 'Ruth']
Owners1 is ['Ruth']
Owners2 is []
Entity_Values is ['5', '3']
6 8 now 2 2
7 8 ? 2 2





processed_information:  ['Ruth had 5 nuts more than Dan .', 'Dan has 3 nuts .']



schema Identification.....



possible_schemas and their sent's indices:  ['Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus'] [0, 0, 0, 0, 0, 0, 0]


Identified Unique Schemas:  {'Compare_Plus'}


In Compare_Plus: 

{'verb': ['had'], 'pre_verb': ['Ruth'], 'after_verb': ['5', 'nuts', 'more'], 'prp_verb': ['than', 'Dan', '.'], 'Entities': ['nuts'], 'Owners1': ['Ruth'], 'Owners2': ['Dan'], 'Entity_Values': ['5', '3']}
Answer in Natural Language Processing....
Ruth had/has 8 nuts

----------------------------------------

sentences:  ['John had 5 apples .', 'Mary gave him 3 apples .', 'How many apples does John have now ?']
sentences information : 
['John had 5 apples .', 'Mary gave him 3 apples .']


Question Related Sentences : 
['How many apples does John have now ?']


CC_resolve_pos_dict is  {0: {'John': 'NNP', 'had': 'VBD', '5': 'CD', 'apples': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'John': 'NNP', 'had': 'VBD', '5': 'CD', 'apples': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'John': 'NNP', 'had': 'VBD', '5': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'Mary': 'NNP', 'gave': 'VBD', 'him': 'PRP', '3': 'CD', 'apples': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'John': 'NNP', 'had': 'VBD', '5': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'Mary': 'NNP', 'gave': 'VBD', 'him': 'PRP', '3': 'CD', 'apples': 'NNS', '.': '.'}}
Word tokens are ['How', 'many', 'apples', 'does', 'John', 'have', 'now', '?']
CC_resolve_pos_dict:  {0: {'John': 'NNP', 'had': 'VBD', '5': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'Mary': 'NNP', 'gave': 'VBD', 'him': 'PRP', '3': 'CD', 'apples': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'apples': 'NNS', 'does': 'VBZ', 'John': 'NNP', 'have': 'VB', 'now': 'RB', '?': '.'}}



processed_input:  ['John had 5 apples .', 'Mary gave him 3 apples .', 'How many apples does John have now ?']




['John', 'had', '5', 'apples', '.'] 99 0

--------------------------

0 5 John 0 0
1 5 had 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['5', 'apples', '.']
Prp_Verb:  []
Entities:  ['apples']
PREverb is ['John']
Owners1 is ['John']
Owners2 is []
Entity_Values is ['5']
2 5 5 0 0
3 5 apples 0 0
4 5 . 0 0


['Mary', 'gave', 'him', '3', 'apples', '.'] 99 1

--------------------------

0 6 Mary 1 1
1 6 gave 1 1
after_verb_tags:  ['PRP', 'CD', 'NNS', '.']
Averb:  ['him', '3', 'apples', '.']
Prp_Verb:  []
Entities:  ['apples']
PREverb is ['Mary']
Owners1 is ['Mary']
Owners2 is []
Entity_Values is ['5', '3']
2 6 him 1 1
3 6 3 1 1
4 6 apples 1 1
5 6 . 1 1


['How', 'many', 'apples', 'does', 'John', 'have', 'now', '?'] 99 2

--------------------------

0 8 How 2 2
1 8 many 2 2
2 8 apples 2 2
3 8 does 2 2
after_verb_tags:  ['NNP', 'VB', 'RB', '.']
Averb:  ['John', 'have', 'now', '?']
Prp_Verb:  []
Entities:  ['apples']
PREverb is ['How', 'many', 'apples']
Owners1 is []
Owners2 is ['John']
Entity_Values is ['5', '3']
4 8 John 2 2
5 8 have 2 2
after_verb_tags:  ['RB', '.']
Averb:  ['now', '?']
Prp_Verb:  []
Entities:  ['apples']
PREverb is ['How', 'many', 'apples', 'does', 'John']
Owners1 is ['John']
Owners2 is []
Entity_Values is ['5', '3']
6 8 now 2 2
7 8 ? 2 2





processed_information:  ['John had 5 apples .', 'Mary gave him 3 apples .']



schema Identification.....



possible_schemas and their sent's indices:  ['Change_Out'] [1]


Identified Unique Schemas:  {'Change_Out'}


In Change Out: 

{'verb': ['gave'], 'pre_verb': ['Mary'], 'after_verb': ['him', '3', 'apples', '.'], 'prp_verb': [], 'Entities': ['apples'], 'Owners1': ['Mary'], 'Owners2': [], 'Entity_Values': ['5', '3']}
Answer in Natural Language Processing....
Mary gave/has 2 apples

----------------------------------------

sentences:  ['Ruth has 3 dolls .', 'Ann has 4 dolls .', 'How many dolls do Ruth and Ann have altogether ?']
sentences information : 
['Ruth has 3 dolls .', 'Ann has 4 dolls .']


Question Related Sentences : 
['How many dolls do Ruth and Ann have altogether ?']


CC_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'has': 'VBZ', '3': 'CD', 'dolls': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'has': 'VBZ', '3': 'CD', 'dolls': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'has': 'VBZ', '3': 'CD', 'dolls': 'NNS', '.': '.'}, 1: {'Ann': 'NNP', 'has': 'VBZ', '4': 'CD', 'dolls': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'has': 'VBZ', '3': 'CD', 'dolls': 'NNS', '.': '.'}, 1: {'Ann': 'NNP', 'has': 'VBZ', '4': 'CD', 'dolls': 'NNS', '.': '.'}}
Word tokens are ['How', 'many', 'dolls', 'do', 'Ruth', 'and', 'Ann', 'have', 'altogether', '?']
CC_resolve_pos_dict:  {0: {'Ruth': 'NNP', 'has': 'VBZ', '3': 'CD', 'dolls': 'NNS', '.': '.'}, 1: {'Ann': 'NNP', 'has': 'VBZ', '4': 'CD', 'dolls': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'dolls': 'NNS', 'do': 'VBP', 'Ruth': 'NNP', 'and': 'CC', 'Ann': 'NNP', 'have': 'VBP', 'altogether': 'RB', '?': '.'}}



processed_input:  ['Ruth has 3 dolls .', 'Ann has 4 dolls .', 'How many dolls do Ruth and Ann have altogether ?']




['Ruth', 'has', '3', 'dolls', '.'] 99 0

--------------------------

0 5 Ruth 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['3', 'dolls', '.']
Prp_Verb:  []
Entities:  ['dolls']
PREverb is ['Ruth']
Owners1 is ['Ruth']
Owners2 is []
Entity_Values is ['3']
2 5 3 0 0
3 5 dolls 0 0
4 5 . 0 0


['Ann', 'has', '4', 'dolls', '.'] 99 1

--------------------------

0 5 Ann 1 1
1 5 has 1 1
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['4', 'dolls', '.']
Prp_Verb:  []
Entities:  ['dolls']
PREverb is ['Ann']
Owners1 is ['Ann']
Owners2 is []
Entity_Values is ['3', '4']
2 5 4 1 1
3 5 dolls 1 1
4 5 . 1 1


['How', 'many', 'dolls', 'do', 'Ruth', 'and', 'Ann', 'have', 'altogether', '?'] 99 2

--------------------------

0 10 How 2 2
1 10 many 2 2
2 10 dolls 2 2
3 10 do 2 2
after_verb_tags:  ['NNP', 'CC', 'NNP', 'VBP', 'RB', '.']
Averb:  ['Ruth', 'and', 'Ann', 'have', 'altogether', '?']
Prp_Verb:  []
Entities:  ['dolls']
PREverb is ['How', 'many', 'dolls']
Owners1 is []
Owners2 is ['Ruth', 'Ann']
Entity_Values is ['3', '4']
4 10 Ruth 2 2
5 10 and 2 2
6 10 Ann 2 2
7 10 have 2 2
after_verb_tags:  ['RB', '.']
Averb:  ['altogether', '?']
Prp_Verb:  []
Entities:  ['dolls']
PREverb is ['How', 'many', 'dolls', 'do', 'Ruth', 'and', 'Ann']
Owners1 is ['Ruth', 'Ann']
Owners2 is []
Entity_Values is ['3', '4']
8 10 altogether 2 2
9 10 ? 2 2





processed_information:  ['Ruth has 3 dolls .', 'Ann has 4 dolls .']



schema Identification.....



possible_schemas and their sent's indices:  ['Combine'] [2]


Identified Unique Schemas:  {'Combine'}


In Combine: 

{'verb': ['have'], 'pre_verb': ['How', 'many', 'dolls', 'do', 'Ruth', 'and', 'Ann'], 'after_verb': ['altogether', '?'], 'prp_verb': [], 'Entities': ['dolls'], 'Owners1': ['Ruth', 'Ann'], 'Owners2': [], 'Entity_Values': ['3', '4']}
Answer in Natural Language Processing....
Ruth have/has 7 dolls

----------------------------------------

sentences:  ['Sara has 6 flowers .', 'Clara has 3 flowers more than Sara .', 'How many flowers does Clara have ?']
sentences information : 
['Sara has 6 flowers .', 'Clara has 3 flowers more than Sara .']


Question Related Sentences : 
['How many flowers does Clara have ?']


CC_resolve_pos_dict is  {0: {'Sara': 'NNP', 'has': 'VBZ', '6': 'CD', 'flowers': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Sara': 'NNP', 'has': 'VBZ', '6': 'CD', 'flowers': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Sara': 'NNP', 'has': 'VBZ', '6': 'CD', 'flowers': 'NNS', '.': '.'}, 1: {'Clara': 'NNP', 'has': 'VBZ', '3': 'CD', 'flowers': 'NNS', 'more': 'JJR', 'than': 'IN', 'Sara': 'NNP', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Sara': 'NNP', 'has': 'VBZ', '6': 'CD', 'flowers': 'NNS', '.': '.'}, 1: {'Clara': 'NNP', 'has': 'VBZ', '3': 'CD', 'flowers': 'NNS', 'more': 'JJR', 'than': 'IN', 'Sara': 'NNP', '.': '.'}}
Word tokens are ['How', 'many', 'flowers', 'does', 'Clara', 'have', '?']
CC_resolve_pos_dict:  {0: {'Sara': 'NNP', 'has': 'VBZ', '6': 'CD', 'flowers': 'NNS', '.': '.'}, 1: {'Clara': 'NNP', 'has': 'VBZ', '3': 'CD', 'flowers': 'NNS', 'more': 'JJR', 'than': 'IN', 'Sara': 'NNP', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'flowers': 'NNS', 'does': 'VBZ', 'Clara': 'NNP', 'have': 'VB', '?': '.'}}



processed_input:  ['Sara has 6 flowers .', 'Clara has 3 flowers more than Sara .', 'How many flowers does Clara have ?']




['Sara', 'has', '6', 'flowers', '.'] 99 0

--------------------------

0 5 Sara 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['6', 'flowers', '.']
Prp_Verb:  []
Entities:  ['flowers']
PREverb is ['Sara']
Owners1 is ['Sara']
Owners2 is []
Entity_Values is ['6']
2 5 6 0 0
3 5 flowers 0 0
4 5 . 0 0


['Clara', 'has', '3', 'flowers', 'more', 'than', 'Sara', '.'] 99 1

--------------------------

0 8 Clara 1 1
1 8 has 1 1
after_verb_tags:  ['CD', 'NNS', 'JJR', 'IN', 'NNP', '.']
Averb:  ['3', 'flowers', 'more']
Prp_Verb:  ['than', 'Sara', '.']
Entities:  ['flowers']
PREverb is ['Clara']
Owners1 is ['Clara']
Owners2 is ['Sara']
Entity_Values is ['6', '3']
2 8 3 1 1
3 8 flowers 1 1
4 8 more 1 1
5 8 than 1 1
6 8 Sara 1 1
7 8 . 1 1


['How', 'many', 'flowers', 'does', 'Clara', 'have', '?'] 99 2

--------------------------

0 7 How 2 2
1 7 many 2 2
2 7 flowers 2 2
3 7 does 2 2
after_verb_tags:  ['NNP', 'VB', '.']
Averb:  ['Clara', 'have', '?']
Prp_Verb:  []
Entities:  ['flowers']
PREverb is ['How', 'many', 'flowers']
Owners1 is []
Owners2 is ['Clara']
Entity_Values is ['6', '3']
4 7 Clara 2 2
5 7 have 2 2
after_verb_tags:  ['.']
Averb:  ['?']
Prp_Verb:  []
Entities:  ['flowers']
PREverb is ['How', 'many', 'flowers', 'does', 'Clara']
Owners1 is ['Clara']
Owners2 is []
Entity_Values is ['6', '3']
6 7 ? 2 2





processed_information:  ['Sara has 6 flowers .', 'Clara has 3 flowers more than Sara .']



schema Identification.....



possible_schemas and their sent's indices:  ['Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus'] [1, 1, 1, 1, 1, 1, 1]


Identified Unique Schemas:  {'Compare_Plus'}


In Compare_Plus: 

{'verb': ['has'], 'pre_verb': ['Clara'], 'after_verb': ['3', 'flowers', 'more'], 'prp_verb': ['than', 'Sara', '.'], 'Entities': ['flowers'], 'Owners1': ['Clara'], 'Owners2': ['Sara'], 'Entity_Values': ['6', '3']}
Answer in Natural Language Processing....
Clara has/has 9 flowers

----------------------------------------

sentences:  ['Angela had 8 computer games .', 'She got 3 computer games more for her birthday .', 'How many computer games does Angela have ?']
sentences information : 
['Angela had 8 computer games .', 'She got 3 computer games more for her birthday .']


Question Related Sentences : 
['How many computer games does Angela have ?']


CC_resolve_pos_dict is  {0: {'Angela': 'NNP', 'had': 'VBD', '8': 'CD', 'computer': 'NN', 'games': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Angela': 'NNP', 'had': 'VBD', '8': 'CD', 'computer': 'NN', 'games': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Angela': 'NNP', 'had': 'VBD', '8': 'CD', 'computer': 'NN', 'games': 'NNS', '.': '.'}, 1: {'She': 'PRP', 'got': 'VBD', '3': 'CD', 'computer': 'NN', 'games': 'NNS', 'more': 'RBR', 'for': 'IN', 'her': 'PRP$', 'birthday': 'NN', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Angela': 'NNP', 'had': 'VBD', '8': 'CD', 'computer': 'NN', 'games': 'NNS', '.': '.'}, 1: {'She': 'PRP', 'got': 'VBD', '3': 'CD', 'computer': 'NN', 'games': 'NNS', 'more': 'RBR', 'for': 'IN', 'her': 'PRP$', 'birthday': 'NN', '.': '.'}}
Word tokens are ['How', 'many', 'computer', 'games', 'does', 'Angela', 'have', '?']
CC_resolve_pos_dict:  {0: {'Angela': 'NNP', 'had': 'VBD', '8': 'CD', 'computer': 'NN', 'games': 'NNS', '.': '.'}, 1: {'She': 'PRP', 'got': 'VBD', '3': 'CD', 'computer': 'NN', 'games': 'NNS', 'more': 'RBR', 'for': 'IN', 'her': 'PRP$', 'birthday': 'NN', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'computer': 'NN', 'games': 'NNS', 'does': 'VBZ', 'Angela': 'NNP', 'have': 'VB', '?': '.'}}



processed_input:  ['Angela had 8 computer games .', 'She got 3 computer games more for her birthday .', 'How many computer games does Angela have ?']




['Angela', 'had', '8', 'computer', 'games', '.'] 99 0

--------------------------

0 6 Angela 0 0
1 6 had 0 0
after_verb_tags:  ['CD', 'NN', 'NNS', '.']
Averb:  ['8', 'computer', 'games', '.']
Prp_Verb:  []
Entities:  ['games']
PREverb is ['Angela']
Owners1 is ['Angela']
Owners2 is []
Entity_Values is ['8']
2 6 8 0 0
3 6 computer 0 0
4 6 games 0 0
5 6 . 0 0


['She', 'got', '3', 'computer', 'games', 'more', 'for', 'her', 'birthday', '.'] 99 1

--------------------------

0 10 She 1 1
1 10 got 1 1
after_verb_tags:  ['CD', 'NN', 'NNS', 'RBR', 'IN', 'PRP$', 'NN', '.']
Averb:  ['3', 'computer', 'games', 'more']
Prp_Verb:  ['for', 'her', 'birthday', '.']
Entities:  ['games']
PREverb is ['Angela']
Owners1 is ['Angela']
Owners2 is []
Entity_Values is ['8', '3']
2 10 3 1 1
3 10 computer 1 1
4 10 games 1 1
5 10 more 1 1
6 10 for 1 1
7 10 her 1 1
8 10 birthday 1 1
9 10 . 1 1


['How', 'many', 'computer', 'games', 'does', 'Angela', 'have', '?'] 99 2

--------------------------

0 8 How 2 2
1 8 many 2 2
2 8 computer 2 2
3 8 games 2 2
4 8 does 2 2
after_verb_tags:  ['NNP', 'VB', '.']
Averb:  ['Angela', 'have', '?']
Prp_Verb:  []
Entities:  ['games']
PREverb is ['How', 'many', 'computer', 'games']
Owners1 is ['computer']
Owners2 is ['Angela']
Entity_Values is ['8', '3']
5 8 Angela 2 2
6 8 have 2 2
after_verb_tags:  ['.']
Averb:  ['?']
Prp_Verb:  []
Entities:  ['games']
PREverb is ['How', 'many', 'computer', 'games', 'does', 'Angela']
Owners1 is ['computer', 'Angela']
Owners2 is []
Entity_Values is ['8', '3']
7 8 ? 2 2





processed_information:  ['Angela had 8 computer games .', 'She got 3 computer games more for her birthday .']



schema Identification.....



possible_schemas and their sent's indices:  ['Change_In'] [1]


Identified Unique Schemas:  {'Change_In'}


In Change_In: 

{'verb': ['got'], 'pre_verb': ['Angela'], 'after_verb': ['3', 'computer', 'games', 'more'], 'prp_verb': ['for', 'her', 'birthday', '.'], 'Entities': ['games'], 'Owners1': ['Angela'], 'Owners2': [], 'Entity_Values': ['8', '3']}
Answer in Natural Language Processing....
Angela got 11 games

----------------------------------------

sentences:  ['Jose has 7 caps .', 'He gets 2 caps from Rebecca .', 'How many caps does Jose end with ?']
sentences information : 
['Jose has 7 caps .', 'He gets 2 caps from Rebecca .']


Question Related Sentences : 
['How many caps does Jose end with ?']


CC_resolve_pos_dict is  {0: {'Jose': 'NNP', 'has': 'VBZ', '7': 'CD', 'caps': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Jose': 'NNP', 'has': 'VBZ', '7': 'CD', 'caps': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Jose': 'NNP', 'has': 'VBZ', '7': 'CD', 'caps': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'gets': 'VBZ', '2': 'CD', 'caps': 'NNS', 'from': 'IN', 'Rebecca': 'NNP', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Jose': 'NNP', 'has': 'VBZ', '7': 'CD', 'caps': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'gets': 'VBZ', '2': 'CD', 'caps': 'NNS', 'from': 'IN', 'Rebecca': 'NNP', '.': '.'}}
Word tokens are ['How', 'many', 'caps', 'does', 'Jose', 'end', 'with', '?']
CC_resolve_pos_dict:  {0: {'Jose': 'NNP', 'has': 'VBZ', '7': 'CD', 'caps': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'gets': 'VBZ', '2': 'CD', 'caps': 'NNS', 'from': 'IN', 'Rebecca': 'NNP', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'caps': 'NN', 'does': 'VBZ', 'Jose': 'NNP', 'end': 'VB', 'with': 'IN', '?': '.'}}



processed_input:  ['Jose has 7 caps .', 'He gets 2 caps from Rebecca .', 'How many caps does Jose end with ?']




['Jose', 'has', '7', 'caps', '.'] 99 0

--------------------------

0 5 Jose 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['7', 'caps', '.']
Prp_Verb:  []
Entities:  ['caps']
PREverb is ['Jose']
Owners1 is ['Jose']
Owners2 is []
Entity_Values is ['7']
2 5 7 0 0
3 5 caps 0 0
4 5 . 0 0


['He', 'gets', '2', 'caps', 'from', 'Rebecca', '.'] 99 1

--------------------------

0 7 He 1 1
1 7 gets 1 1
after_verb_tags:  ['CD', 'NNS', 'IN', 'NNP', '.']
Averb:  ['2', 'caps']
Prp_Verb:  ['from', 'Rebecca', '.']
Entities:  ['caps']
PREverb is ['Jose']
Owners1 is ['Jose']
Owners2 is ['Rebecca']
Entity_Values is ['7', '2']
2 7 2 1 1
3 7 caps 1 1
4 7 from 1 1
5 7 Rebecca 1 1
6 7 . 1 1


['How', 'many', 'caps', 'does', 'Jose', 'end', 'with', '?'] 99 2

--------------------------

0 8 How 2 2
1 8 many 2 2
2 8 caps 2 2
3 8 does 2 2
after_verb_tags:  ['NNP', 'VB', 'IN', '.']
Averb:  ['Jose', 'end']
Prp_Verb:  ['with', '?']
Entities:  ['caps']
PREverb is ['How', 'many', 'caps']
Owners1 is ['caps']
Owners2 is ['Jose']
Entity_Values is ['7', '2']
4 8 Jose 2 2
5 8 end 2 2
after_verb_tags:  ['IN', '.']
Averb:  []
Prp_Verb:  ['with', '?']
Entities:  ['caps']
PREverb is ['How', 'many', 'caps', 'does', 'Jose']
Owners1 is ['caps', 'Jose']
Owners2 is []
Entity_Values is ['7', '2']
6 8 with 2 2
7 8 ? 2 2





processed_information:  ['Jose has 7 caps .', 'He gets 2 caps from Rebecca .']



schema Identification.....



possible_schemas and their sent's indices:  ['Change_In'] [1]


Identified Unique Schemas:  {'Change_In'}


In Change_In: 

{'verb': ['gets'], 'pre_verb': ['Jose'], 'after_verb': ['2', 'caps'], 'prp_verb': ['from', 'Rebecca', '.'], 'Entities': ['caps'], 'Owners1': ['Jose'], 'Owners2': ['Rebecca'], 'Entity_Values': ['7', '2']}
Answer in Natural Language Processing....
Jose gets 9 caps

----------------------------------------

sentences:  ['Dan found 857 seashells on the beach .', 'He gave Nancy 226 of the seashells .', 'How many seashells does he now have ?']
sentences information : 
['Dan found 857 seashells on the beach .', 'He gave Nancy 226 of the seashells .']


Question Related Sentences : 
['How many seashells does he now have ?']


CC_resolve_pos_dict is  {0: {'Dan': 'NNP', 'found': 'VBD', '857': 'CD', 'seashells': 'NNS', 'on': 'IN', 'the': 'DT', 'beach': 'NN', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Dan': 'NNP', 'found': 'VBD', '857': 'CD', 'seashells': 'NNS', 'on': 'IN', 'the': 'DT', 'beach': 'NN', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Dan': 'NNP', 'found': 'VBD', '857': 'CD', 'seashells': 'NNS', 'on': 'IN', 'the': 'DT', 'beach': 'NN', '.': '.'}, 1: {'He': 'PRP', 'gave': 'VBD', 'Nancy': 'NNP', '226': 'CD', 'of': 'IN', 'the': 'DT', 'seashells': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Dan': 'NNP', 'found': 'VBD', '857': 'CD', 'seashells': 'NNS', 'on': 'IN', 'the': 'DT', 'beach': 'NN', '.': '.'}, 1: {'He': 'PRP', 'gave': 'VBD', 'Nancy': 'NNP', '226': 'CD', 'of': 'IN', 'the': 'DT', 'seashells': 'NNS', '.': '.'}}
Word tokens are ['How', 'many', 'seashells', 'does', 'he', 'now', 'have', '?']
CC_resolve_pos_dict:  {0: {'Dan': 'NNP', 'found': 'VBD', '857': 'CD', 'seashells': 'NNS', 'on': 'IN', 'the': 'DT', 'beach': 'NN', '.': '.'}, 1: {'He': 'PRP', 'gave': 'VBD', 'Nancy': 'NNP', '226': 'CD', 'of': 'IN', 'the': 'DT', 'seashells': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'seashells': 'NNS', 'does': 'VBZ', 'he': 'PRP', 'now': 'RB', 'have': 'VBP', '?': '.'}}



processed_input:  ['Dan found 857 seashells on the beach .', 'He gave Nancy 226 of the seashells .', 'How many seashells does he now have ?']




['Dan', 'found', '857', 'seashells', 'on', 'the', 'beach', '.'] 99 0

--------------------------

0 8 Dan 0 0
1 8 found 0 0
after_verb_tags:  ['CD', 'NNS', 'IN', 'DT', 'NN', '.']
Averb:  ['857', 'seashells']
Prp_Verb:  ['on', 'the', 'beach', '.']
Entities:  ['seashells']
PREverb is ['Dan']
Owners1 is ['Dan']
Owners2 is []
Entity_Values is ['857']
2 8 857 0 0
3 8 seashells 0 0
4 8 on 0 0
5 8 the 0 0
6 8 beach 0 0
7 8 . 0 0


['He', 'gave', 'Nancy', '226', 'of', 'the', 'seashells', '.'] 99 1

--------------------------

0 8 He 1 1
1 8 gave 1 1
after_verb_tags:  ['NNP', 'CD', 'IN', 'DT', 'NNS', '.']
Averb:  ['Nancy', '226']
Prp_Verb:  ['of', 'the', 'seashells', '.']
Entities:  ['seashells']
PREverb is ['Dan']
Owners1 is ['Dan']
Owners2 is ['Nancy']
Entity_Values is ['857', '226']
2 8 Nancy 1 1
3 8 226 1 1
4 8 of 1 1
5 8 the 1 1
6 8 seashells 1 1
7 8 . 1 1


['How', 'many', 'seashells', 'does', 'he', 'now', 'have', '?'] 99 2

--------------------------

0 8 How 2 2
1 8 many 2 2
2 8 seashells 2 2
3 8 does 2 2
after_verb_tags:  ['PRP', 'RB', 'VBP', '.']
Averb:  ['he', 'now', 'have', '?']
Prp_Verb:  []
Entities:  ['seashells']
PREverb is ['How', 'many', 'seashells']
Owners1 is []
Owners2 is []
Entity_Values is ['857', '226']
4 8 he 2 2
5 8 now 2 2
6 8 have 2 2
after_verb_tags:  ['.']
Averb:  ['?']
Prp_Verb:  []
Entities:  ['seashells']
PREverb is ['Dan']
Owners1 is ['Dan']
Owners2 is []
Entity_Values is ['857', '226']
7 8 ? 2 2





processed_information:  ['Dan found 857 seashells on the beach .', 'He gave Nancy 226 of the seashells .']



schema Identification.....



possible_schemas and their sent's indices:  ['Change_Out', 'Increase'] [1, 0]


Identified Unique Schemas:  {'Increase', 'Change_Out'}


In Increase: 

{'verb': ['gave'], 'pre_verb': ['Dan'], 'after_verb': ['Nancy', '226'], 'prp_verb': ['of', 'the', 'seashells', '.'], 'Entities': ['seashells'], 'Owners1': ['Dan'], 'Owners2': ['Nancy'], 'Entity_Values': ['857', '226']}
Answer in Natural Language Processing....
Dan gave/has 1083 seashells

----------------------------------------

In Change Out: 

{'verb': ['gave'], 'pre_verb': ['Dan'], 'after_verb': ['Nancy', '226'], 'prp_verb': ['of', 'the', 'seashells', '.'], 'Entities': ['seashells'], 'Owners1': ['Dan'], 'Owners2': ['Nancy'], 'Entity_Values': ['857', '226']}
Answer in Natural Language Processing....
Dan gave/has 631 seashells

----------------------------------------

sentences:  ['Sara has 122 books .', 'Sally has 129 books .', 'How many books do they have together ?']
sentences information : 
['Sara has 122 books .', 'Sally has 129 books .']


Question Related Sentences : 
['How many books do they have together ?']


CC_resolve_pos_dict is  {0: {'Sara': 'NNP', 'has': 'VBZ', '122': 'CD', 'books': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Sara': 'NNP', 'has': 'VBZ', '122': 'CD', 'books': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Sara': 'NNP', 'has': 'VBZ', '122': 'CD', 'books': 'NNS', '.': '.'}, 1: {'Sally': 'RB', 'has': 'VBZ', '129': 'CD', 'books': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Sara': 'NNP', 'has': 'VBZ', '122': 'CD', 'books': 'NNS', '.': '.'}, 1: {'Sally': 'RB', 'has': 'VBZ', '129': 'CD', 'books': 'NNS', '.': '.'}}
Word tokens are ['How', 'many', 'books', 'do', 'they', 'have', 'together', '?']
CC_resolve_pos_dict:  {0: {'Sara': 'NNP', 'has': 'VBZ', '122': 'CD', 'books': 'NNS', '.': '.'}, 1: {'Sally': 'RB', 'has': 'VBZ', '129': 'CD', 'books': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'books': 'NNS', 'do': 'VBP', 'they': 'PRP', 'have': 'VB', 'together': 'RB', '?': '.'}}



processed_input:  ['Sara has 122 books .', 'Sally has 129 books .', 'How many books do they have together ?']




['Sara', 'has', '122', 'books', '.'] 99 0

--------------------------

0 5 Sara 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['122', 'books', '.']
Prp_Verb:  []
Entities:  ['books']
PREverb is ['Sara']
Owners1 is ['Sara']
Owners2 is []
Entity_Values is ['122']
2 5 122 0 0
3 5 books 0 0
4 5 . 0 0


['Sally', 'has', '129', 'books', '.'] 99 1

--------------------------

0 5 Sally 1 1
1 5 has 1 1
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['129', 'books', '.']
Prp_Verb:  []
Entities:  ['books']
PREverb is ['Sally']
Owners1 is []
Owners2 is []
Entity_Values is ['122', '129']
2 5 129 1 1
3 5 books 1 1
4 5 . 1 1


['How', 'many', 'books', 'do', 'they', 'have', 'together', '?'] 99 2

--------------------------

0 8 How 2 2
1 8 many 2 2
2 8 books 2 2
3 8 do 2 2
after_verb_tags:  ['PRP', 'VB', 'RB', '.']
Averb:  ['they', 'have', 'together', '?']
Prp_Verb:  []
Entities:  ['books']
PREverb is ['How', 'many', 'books']
Owners1 is []
Owners2 is []
Entity_Values is ['122', '129']
4 8 they 2 2
5 8 have 2 2
