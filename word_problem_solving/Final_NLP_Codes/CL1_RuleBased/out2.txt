sentences:  ['Ram has 6 apples .', 'Sita has 7 apples .', 'How many apples are there altogether ?']
sentences information : 
['Ram has 6 apples .', 'Sita has 7 apples .']


Question Related Sentences : 
['How many apples are there altogether ?']


CC_resolve_pos_dict is  {0: {'Ram': 'NNP', 'has': 'VBZ', '6': 'CD', 'apples': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Ram': 'NNP', 'has': 'VBZ', '6': 'CD', 'apples': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Ram': 'NNP', 'has': 'VBZ', '6': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'Sita': 'NNP', 'has': 'VBZ', '7': 'CD', 'apples': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Ram': 'NNP', 'has': 'VBZ', '6': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'Sita': 'NNP', 'has': 'VBZ', '7': 'CD', 'apples': 'NNS', '.': '.'}}
CC_resolve_pos_dict:  {0: {'Ram': 'NNP', 'has': 'VBZ', '6': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'Sita': 'NNP', 'has': 'VBZ', '7': 'CD', 'apples': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'apples': 'NNS', 'are': 'VBP', 'there': 'RB', 'altogether': 'RB', '?': '.'}}



processed_input:  ['Ram has 6 apples .', 'Sita has 7 apples .', 'How many apples are there altogether ?']




['Ram', 'has', '6', 'apples', '.'] 99 0

--------------------------

0 5 Ram 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['6', 'apples', '.']
Prp_Verb:  []
Entities:  ['apples']
PREverb is ['Ram']
Owners1 is ['Ram']
Owners2 is []
Entity_Values is ['6']
2 5 6 0 0
3 5 apples 0 0
4 5 . 0 0


['Sita', 'has', '7', 'apples', '.'] 99 1

--------------------------

0 5 Sita 1 1
1 5 has 1 1
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['7', 'apples', '.']
Prp_Verb:  []
Entities:  ['apples']
PREverb is ['Sita']
Owners1 is ['Sita']
Owners2 is []
Entity_Values is ['6', '7']
2 5 7 1 1
3 5 apples 1 1
4 5 . 1 1


['How', 'many', 'apples', 'are', 'there', 'altogether', '?'] 99 2

--------------------------

0 7 How 2 2
1 7 many 2 2
2 7 apples 2 2
3 7 are 2 2
after_verb_tags:  ['RB', 'RB', '.']
Averb:  ['there', 'altogether', '?']
Prp_Verb:  []
Entities:  ['apples']
PREverb is ['How', 'many', 'apples']
Owners1 is []
Owners2 is []
Entity_Values is ['6', '7']
4 7 there 2 2
5 7 altogether 2 2
6 7 ? 2 2


dict_cc_resolve=  {0: {'verb': ['has'], 'pre_verb': ['Ram'], 'after_verb': ['6', 'apples', '.'], 'prp_verb': [], 'Entities': ['apples'], 'Owners1': ['Ram'], 'Owners2': [], 'Entity_Values': ['6', '7']}, 1: {'verb': ['has'], 'pre_verb': ['Sita'], 'after_verb': ['7', 'apples', '.'], 'prp_verb': [], 'Entities': ['apples'], 'Owners1': ['Sita'], 'Owners2': [], 'Entity_Values': ['6', '7']}, 2: {'verb': ['are'], 'pre_verb': ['How', 'many', 'apples'], 'after_verb': ['there', 'altogether', '?'], 'prp_verb': [], 'Entities': ['apples'], 'Owners1': [], 'Owners2': [], 'Entity_Values': ['6', '7']}}



processed_information:  ['Ram has 6 apples .', 'Sita has 7 apples .']



schema Identification.....



possible_schemas and their sent's indices:  ['Combine'] [2]


Identified Unique Schemas:  {'Combine'}


In Combine: 

{'verb': ['are'], 'pre_verb': ['How', 'many', 'apples'], 'after_verb': ['there', 'altogether', '?'], 'prp_verb': [], 'Entities': ['apples'], 'Owners1': [], 'Owners2': [], 'Entity_Values': ['6', '7']}
Answer in Natural Language Processing....
They are/has 13 apples

----------------------------------------

sentences:  ['Scot has 6 marbles .', 'He finds 4 more marbles .', 'How many marbles does he have in all ?']
sentences information : 
['Scot has 6 marbles .', 'He finds 4 more marbles .']


Question Related Sentences : 
['How many marbles does he have in all ?']


CC_resolve_pos_dict is  {0: {'Scot': 'NNP', 'has': 'VBZ', '6': 'CD', 'marbles': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Scot': 'NNP', 'has': 'VBZ', '6': 'CD', 'marbles': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Scot': 'NNP', 'has': 'VBZ', '6': 'CD', 'marbles': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'finds': 'VBZ', '4': 'CD', 'more': 'JJR', 'marbles': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Scot': 'NNP', 'has': 'VBZ', '6': 'CD', 'marbles': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'finds': 'VBZ', '4': 'CD', 'more': 'JJR', 'marbles': 'NNS', '.': '.'}}
CC_resolve_pos_dict:  {0: {'Scot': 'NNP', 'has': 'VBZ', '6': 'CD', 'marbles': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'finds': 'VBZ', '4': 'CD', 'more': 'JJR', 'marbles': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'marbles': 'NNS', 'does': 'VBZ', 'he': 'PRP', 'have': 'VB', 'in': 'IN', 'all': 'DT', '?': '.'}}



processed_input:  ['Scot has 6 marbles .', 'He finds 4 more marbles .', 'How many marbles does he have in all ?']




['Scot', 'has', '6', 'marbles', '.'] 99 0

--------------------------

0 5 Scot 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['6', 'marbles', '.']
Prp_Verb:  []
Entities:  ['marbles']
PREverb is ['Scot']
Owners1 is ['Scot']
Owners2 is []
Entity_Values is ['6']
2 5 6 0 0
3 5 marbles 0 0
4 5 . 0 0


['He', 'finds', '4', 'more', 'marbles', '.'] 99 1

--------------------------

0 6 He 1 1
1 6 finds 1 1
after_verb_tags:  ['CD', 'JJR', 'NNS', '.']
Averb:  ['4', 'more', 'marbles', '.']
Prp_Verb:  []
Entities:  ['marbles']
PREverb is ['Scot']
Owners1 is ['Scot']
Owners2 is []
Entity_Values is ['6', '4']
2 6 4 1 1
3 6 more 1 1
4 6 marbles 1 1
5 6 . 1 1


['How', 'many', 'marbles', 'does', 'he', 'have', 'in', 'all', '?'] 99 2

--------------------------

0 9 How 2 2
1 9 many 2 2
2 9 marbles 2 2
3 9 does 2 2
after_verb_tags:  ['PRP', 'VB', 'IN', 'DT', '.']
Averb:  ['he', 'have']
Prp_Verb:  ['in', 'all', '?']
Entities:  ['marbles']
PREverb is ['How', 'many', 'marbles']
Owners1 is []
Owners2 is []
Entity_Values is ['6', '4']
4 9 he 2 2
5 9 have 2 2
after_verb_tags:  ['IN', 'DT', '.']
Averb:  []
Prp_Verb:  ['in', 'all', '?']
Entities:  ['marbles']
PREverb is ['Scot']
Owners1 is ['Scot']
Owners2 is []
Entity_Values is ['6', '4']
6 9 in 2 2
7 9 all 2 2
8 9 ? 2 2


dict_cc_resolve=  {0: {'verb': ['has'], 'pre_verb': ['Scot'], 'after_verb': ['6', 'marbles', '.'], 'prp_verb': [], 'Entities': ['marbles'], 'Owners1': ['Scot'], 'Owners2': [], 'Entity_Values': ['6', '4']}, 1: {'verb': ['finds'], 'pre_verb': ['Scot'], 'after_verb': ['4', 'more', 'marbles', '.'], 'prp_verb': [], 'Entities': ['marbles'], 'Owners1': ['Scot'], 'Owners2': [], 'Entity_Values': ['6', '4']}, 2: {'verb': ['have'], 'pre_verb': ['Scot'], 'after_verb': [], 'prp_verb': ['in', 'all', '?'], 'Entities': ['marbles'], 'Owners1': ['Scot'], 'Owners2': [], 'Entity_Values': ['6', '4']}}



processed_information:  ['Scot has 6 marbles .', 'He finds 4 more marbles .']



schema Identification.....



possible_schemas and their sent's indices:  ['Increase'] [1]


Identified Unique Schemas:  {'Increase'}


In Increase: 

{'verb': ['finds'], 'pre_verb': ['Scot'], 'after_verb': ['4', 'more', 'marbles', '.'], 'prp_verb': [], 'Entities': ['marbles'], 'Owners1': ['Scot'], 'Owners2': [], 'Entity_Values': ['6', '4']}
Answer in Natural Language Processing....
Scot finds/has 10 marbles

----------------------------------------

sentences:  ['Jeff has 5 bags .', 'He buys 5 more bags .', 'How many bags does he have in all ?']
sentences information : 
['Jeff has 5 bags .', 'He buys 5 more bags .']


Question Related Sentences : 
['How many bags does he have in all ?']


CC_resolve_pos_dict is  {0: {'Jeff': 'NNP', 'has': 'VBZ', '5': 'CD', 'bags': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Jeff': 'NNP', 'has': 'VBZ', '5': 'CD', 'bags': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Jeff': 'NNP', 'has': 'VBZ', '5': 'CD', 'bags': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'buys': 'VBZ', '5': 'CD', 'more': 'JJR', 'bags': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Jeff': 'NNP', 'has': 'VBZ', '5': 'CD', 'bags': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'buys': 'VBZ', '5': 'CD', 'more': 'JJR', 'bags': 'NNS', '.': '.'}}
CC_resolve_pos_dict:  {0: {'Jeff': 'NNP', 'has': 'VBZ', '5': 'CD', 'bags': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'buys': 'VBZ', '5': 'CD', 'more': 'JJR', 'bags': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'bags': 'NN', 'does': 'VBZ', 'he': 'PRP', 'have': 'VB', 'in': 'IN', 'all': 'DT', '?': '.'}}



processed_input:  ['Jeff has 5 bags .', 'He buys 5 more bags .', 'How many bags does he have in all ?']




['Jeff', 'has', '5', 'bags', '.'] 99 0

--------------------------

0 5 Jeff 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['5', 'bags', '.']
Prp_Verb:  []
Entities:  ['bags']
PREverb is ['Jeff']
Owners1 is ['Jeff']
Owners2 is []
Entity_Values is ['5']
2 5 5 0 0
3 5 bags 0 0
4 5 . 0 0


['He', 'buys', '5', 'more', 'bags', '.'] 99 1

--------------------------

0 6 He 1 1
1 6 buys 1 1
after_verb_tags:  ['CD', 'JJR', 'NNS', '.']
Averb:  ['5', 'more', 'bags', '.']
Prp_Verb:  []
Entities:  ['bags']
PREverb is ['Jeff']
Owners1 is ['Jeff']
Owners2 is []
Entity_Values is ['5', '5']
2 6 5 1 1
3 6 more 1 1
4 6 bags 1 1
5 6 . 1 1


['How', 'many', 'bags', 'does', 'he', 'have', 'in', 'all', '?'] 99 2

--------------------------

0 9 How 2 2
1 9 many 2 2
2 9 bags 2 2
3 9 does 2 2
after_verb_tags:  ['PRP', 'VB', 'IN', 'DT', '.']
Averb:  ['he', 'have']
Prp_Verb:  ['in', 'all', '?']
Entities:  ['bags']
PREverb is ['How', 'many', 'bags']
Owners1 is ['bags']
Owners2 is []
Entity_Values is ['5', '5']
4 9 he 2 2
5 9 have 2 2
after_verb_tags:  ['IN', 'DT', '.']
Averb:  []
Prp_Verb:  ['in', 'all', '?']
Entities:  ['bags']
PREverb is ['Jeff']
Owners1 is ['bags', 'Jeff']
Owners2 is []
Entity_Values is ['5', '5']
6 9 in 2 2
7 9 all 2 2
8 9 ? 2 2


dict_cc_resolve=  {0: {'verb': ['has'], 'pre_verb': ['Jeff'], 'after_verb': ['5', 'bags', '.'], 'prp_verb': [], 'Entities': ['bags'], 'Owners1': ['Jeff'], 'Owners2': [], 'Entity_Values': ['5', '5']}, 1: {'verb': ['buys'], 'pre_verb': ['Jeff'], 'after_verb': ['5', 'more', 'bags', '.'], 'prp_verb': [], 'Entities': ['bags'], 'Owners1': ['Jeff'], 'Owners2': [], 'Entity_Values': ['5', '5']}, 2: {'verb': ['have'], 'pre_verb': ['Jeff'], 'after_verb': [], 'prp_verb': ['in', 'all', '?'], 'Entities': ['bags'], 'Owners1': ['bags', 'Jeff'], 'Owners2': [], 'Entity_Values': ['5', '5']}}



processed_information:  ['Jeff has 5 bags .', 'He buys 5 more bags .']



schema Identification.....



possible_schemas and their sent's indices:  ['Change_In'] [1]


Identified Unique Schemas:  {'Change_In'}


In Change_In: 

{'verb': ['buys'], 'pre_verb': ['Jeff'], 'after_verb': ['5', 'more', 'bags', '.'], 'prp_verb': [], 'Entities': ['bags'], 'Owners1': ['Jeff'], 'Owners2': [], 'Entity_Values': ['5', '5']}
Answer in Natural Language Processing....
Jeff buys 10 bags

----------------------------------------

sentences:  ['John buys 11 peaches .', 'He eats 9 peaches .', 'How many does John have now ?']
sentences information : 
['John buys 11 peaches .', 'He eats 9 peaches .']


Question Related Sentences : 
['How many does John have now ?']


CC_resolve_pos_dict is  {0: {'John': 'NNP', 'buys': 'VBZ', '11': 'CD', 'peaches': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'John': 'NNP', 'buys': 'VBZ', '11': 'CD', 'peaches': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'John': 'NNP', 'buys': 'VBZ', '11': 'CD', 'peaches': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'eats': 'VBZ', '9': 'CD', 'peaches': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'John': 'NNP', 'buys': 'VBZ', '11': 'CD', 'peaches': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'eats': 'VBZ', '9': 'CD', 'peaches': 'NNS', '.': '.'}}
CC_resolve_pos_dict:  {0: {'John': 'NNP', 'buys': 'VBZ', '11': 'CD', 'peaches': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'eats': 'VBZ', '9': 'CD', 'peaches': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'does': 'VBZ', 'John': 'NNP', 'have': 'VB', 'now': 'RB', '?': '.'}}



processed_input:  ['John buys 11 peaches .', 'He eats 9 peaches .', 'How many does John have now ?']




['John', 'buys', '11', 'peaches', '.'] 99 0

--------------------------

0 5 John 0 0
1 5 buys 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['11', 'peaches', '.']
Prp_Verb:  []
Entities:  ['peaches']
PREverb is ['John']
Owners1 is ['John']
Owners2 is []
Entity_Values is ['11']
2 5 11 0 0
3 5 peaches 0 0
4 5 . 0 0


['He', 'eats', '9', 'peaches', '.'] 99 1

--------------------------

0 5 He 1 1
1 5 eats 1 1
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['9', 'peaches', '.']
Prp_Verb:  []
Entities:  ['peaches']
PREverb is ['John']
Owners1 is ['John']
Owners2 is []
Entity_Values is ['11', '9']
2 5 9 1 1
3 5 peaches 1 1
4 5 . 1 1


['How', 'many', 'does', 'John', 'have', 'now', '?'] 99 2

--------------------------

0 7 How 2 2
1 7 many 2 2
2 7 does 2 2
after_verb_tags:  ['NNP', 'VB', 'RB', '.']
Averb:  ['John', 'have', 'now', '?']
Prp_Verb:  []
Entities:  ['peaches']
PREverb is ['How', 'many']
Owners1 is []
Owners2 is ['John']
Entity_Values is ['11', '9']
3 7 John 2 2
4 7 have 2 2
after_verb_tags:  ['RB', '.']
Averb:  ['now', '?']
Prp_Verb:  []
Entities:  ['peaches']
PREverb is ['How', 'many', 'does', 'John']
Owners1 is ['John']
Owners2 is []
Entity_Values is ['11', '9']
5 7 now 2 2
6 7 ? 2 2


dict_cc_resolve=  {0: {'verb': ['buys'], 'pre_verb': ['John'], 'after_verb': ['11', 'peaches', '.'], 'prp_verb': [], 'Entities': ['peaches'], 'Owners1': ['John'], 'Owners2': [], 'Entity_Values': ['11', '9']}, 1: {'verb': ['eats'], 'pre_verb': ['John'], 'after_verb': ['9', 'peaches', '.'], 'prp_verb': [], 'Entities': ['peaches'], 'Owners1': ['John'], 'Owners2': [], 'Entity_Values': ['11', '9']}, 2: {'verb': ['have'], 'pre_verb': ['How', 'many', 'does', 'John'], 'after_verb': ['now', '?'], 'prp_verb': [], 'Entities': ['peaches'], 'Owners1': ['John'], 'Owners2': [], 'Entity_Values': ['11', '9']}}



processed_information:  ['John buys 11 peaches .', 'He eats 9 peaches .']



schema Identification.....



possible_schemas and their sent's indices:  ['Reduction', 'Change_In'] [1, 0]


Identified Unique Schemas:  {'Reduction', 'Change_In'}


In Reduction: 

{'verb': ['eats'], 'pre_verb': ['John'], 'after_verb': ['9', 'peaches', '.'], 'prp_verb': [], 'Entities': ['peaches'], 'Owners1': ['John'], 'Owners2': [], 'Entity_Values': ['11', '9']}
Answer in Natural Language Processing....
John eats/has 2 peaches

----------------------------------------

In Change_In: 

{'verb': ['eats'], 'pre_verb': ['John'], 'after_verb': ['9', 'peaches', '.'], 'prp_verb': [], 'Entities': ['peaches'], 'Owners1': ['John'], 'Owners2': [], 'Entity_Values': ['11', '9']}
Answer in Natural Language Processing....
John eats 20 peaches

----------------------------------------

sentences:  ['Sidd has 11 books .', 'Paul has 9 books .', 'How many books do they have altogether ?']
sentences information : 
['Sidd has 11 books .', 'Paul has 9 books .']


Question Related Sentences : 
['How many books do they have altogether ?']


CC_resolve_pos_dict is  {0: {'Sidd': 'NNP', 'has': 'VBZ', '11': 'CD', 'books': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Sidd': 'NNP', 'has': 'VBZ', '11': 'CD', 'books': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Sidd': 'NNP', 'has': 'VBZ', '11': 'CD', 'books': 'NNS', '.': '.'}, 1: {'Paul': 'NNP', 'has': 'VBZ', '9': 'CD', 'books': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Sidd': 'NNP', 'has': 'VBZ', '11': 'CD', 'books': 'NNS', '.': '.'}, 1: {'Paul': 'NNP', 'has': 'VBZ', '9': 'CD', 'books': 'NNS', '.': '.'}}
CC_resolve_pos_dict:  {0: {'Sidd': 'NNP', 'has': 'VBZ', '11': 'CD', 'books': 'NNS', '.': '.'}, 1: {'Paul': 'NNP', 'has': 'VBZ', '9': 'CD', 'books': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'books': 'NNS', 'do': 'VBP', 'they': 'PRP', 'have': 'VB', 'altogether': 'RB', '?': '.'}}



processed_input:  ['Sidd has 11 books .', 'Paul has 9 books .', 'How many books do they have altogether ?']




['Sidd', 'has', '11', 'books', '.'] 99 0

--------------------------

0 5 Sidd 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['11', 'books', '.']
Prp_Verb:  []
Entities:  ['books']
PREverb is ['Sidd']
Owners1 is ['Sidd']
Owners2 is []
Entity_Values is ['11']
2 5 11 0 0
3 5 books 0 0
4 5 . 0 0


['Paul', 'has', '9', 'books', '.'] 99 1

--------------------------

0 5 Paul 1 1
1 5 has 1 1
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['9', 'books', '.']
Prp_Verb:  []
Entities:  ['books']
PREverb is ['Paul']
Owners1 is ['Paul']
Owners2 is []
Entity_Values is ['11', '9']
2 5 9 1 1
3 5 books 1 1
4 5 . 1 1


['How', 'many', 'books', 'do', 'they', 'have', 'altogether', '?'] 99 2

--------------------------

0 8 How 2 2
1 8 many 2 2
2 8 books 2 2
3 8 do 2 2
after_verb_tags:  ['PRP', 'VB', 'RB', '.']
Averb:  ['they', 'have', 'altogether', '?']
Prp_Verb:  []
Entities:  ['books']
PREverb is ['How', 'many', 'books']
Owners1 is []
Owners2 is []
Entity_Values is ['11', '9']
4 8 they 2 2
5 8 have 2 2
after_verb_tags:  ['RB', '.']
Averb:  ['altogether', '?']
Prp_Verb:  []
Entities:  ['books']
PREverb is ['Paul']
Owners1 is ['Paul']
Owners2 is []
Entity_Values is ['11', '9']
6 8 altogether 2 2
7 8 ? 2 2


dict_cc_resolve=  {0: {'verb': ['has'], 'pre_verb': ['Sidd'], 'after_verb': ['11', 'books', '.'], 'prp_verb': [], 'Entities': ['books'], 'Owners1': ['Sidd'], 'Owners2': [], 'Entity_Values': ['11', '9']}, 1: {'verb': ['has'], 'pre_verb': ['Paul'], 'after_verb': ['9', 'books', '.'], 'prp_verb': [], 'Entities': ['books'], 'Owners1': ['Paul'], 'Owners2': [], 'Entity_Values': ['11', '9']}, 2: {'verb': ['have'], 'pre_verb': ['Paul'], 'after_verb': ['altogether', '?'], 'prp_verb': [], 'Entities': ['books'], 'Owners1': ['Paul'], 'Owners2': [], 'Entity_Values': ['11', '9']}}



processed_information:  ['Sidd has 11 books .', 'Paul has 9 books .']



schema Identification.....



possible_schemas and their sent's indices:  ['Combine'] [2]


Identified Unique Schemas:  {'Combine'}


In Combine: 

{'verb': ['have'], 'pre_verb': ['Paul'], 'after_verb': ['altogether', '?'], 'prp_verb': [], 'Entities': ['books'], 'Owners1': ['Paul'], 'Owners2': [], 'Entity_Values': ['11', '9']}
Answer in Natural Language Processing....
Paul have/has 20 books

----------------------------------------

sentences:  ['Lee has 4 cups .', 'His brother takes away 3 cups from Lee .', 'How many cups does Lee have ?']
sentences information : 
['Lee has 4 cups .', 'His brother takes away 3 cups from Lee .']


Question Related Sentences : 
['How many cups does Lee have ?']


CC_resolve_pos_dict is  {0: {'Lee': 'NNP', 'has': 'VBZ', '4': 'CD', 'cups': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Lee': 'NNP', 'has': 'VBZ', '4': 'CD', 'cups': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Lee': 'NNP', 'has': 'VBZ', '4': 'CD', 'cups': 'NNS', '.': '.'}, 1: {'His': 'PRP$', 'brother': 'NN', 'takes': 'VBZ', 'away': 'RB', '3': 'CD', 'cups': 'NNS', 'from': 'IN', 'Lee': 'NNP', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Lee': 'NNP', 'has': 'VBZ', '4': 'CD', 'cups': 'NNS', '.': '.'}, 1: {'His': 'PRP$', 'brother': 'NN', 'takes': 'VBZ', 'away': 'RB', '3': 'CD', 'cups': 'NNS', 'from': 'IN', 'Lee': 'NNP', '.': '.'}}
CC_resolve_pos_dict:  {0: {'Lee': 'NNP', 'has': 'VBZ', '4': 'CD', 'cups': 'NNS', '.': '.'}, 1: {'His': 'PRP$', 'brother': 'NN', 'takes': 'VBZ', 'away': 'RB', '3': 'CD', 'cups': 'NNS', 'from': 'IN', 'Lee': 'NNP', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'cups': 'NN', 'does': 'VBZ', 'Lee': 'NNP', 'have': 'VB', '?': '.'}}



processed_input:  ['Lee has 4 cups .', 'His brother takes away 3 cups from Lee .', 'How many cups does Lee have ?']




['Lee', 'has', '4', 'cups', '.'] 99 0

--------------------------

0 5 Lee 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['4', 'cups', '.']
Prp_Verb:  []
Entities:  ['cups']
PREverb is ['Lee']
Owners1 is ['Lee']
Owners2 is []
Entity_Values is ['4']
2 5 4 0 0
3 5 cups 0 0
4 5 . 0 0


['His', 'brother', 'takes', 'away', '3', 'cups', 'from', 'Lee', '.'] 99 1

--------------------------

0 9 His 1 1
1 9 brother 1 1
2 9 takes 1 1
after_verb_tags:  ['RB', 'CD', 'NNS', 'IN', 'NNP', '.']
Averb:  ['away', '3', 'cups']
Prp_Verb:  ['from', 'Lee', '.']
Entities:  ['cups']
PREverb is ['Lee']
Owners1 is ['Lee', 'brother']
Owners2 is ['Lee']
Entity_Values is ['4', '3']
3 9 away 1 1
4 9 3 1 1
5 9 cups 1 1
6 9 from 1 1
7 9 Lee 1 1
8 9 . 1 1


['How', 'many', 'cups', 'does', 'Lee', 'have', '?'] 99 2

--------------------------

0 7 How 2 2
1 7 many 2 2
2 7 cups 2 2
3 7 does 2 2
after_verb_tags:  ['NNP', 'VB', '.']
Averb:  ['Lee', 'have', '?']
Prp_Verb:  []
Entities:  ['cups']
PREverb is ['How', 'many', 'cups']
Owners1 is ['cups']
Owners2 is ['Lee']
Entity_Values is ['4', '3']
4 7 Lee 2 2
5 7 have 2 2
after_verb_tags:  ['.']
Averb:  ['?']
Prp_Verb:  []
Entities:  ['cups']
PREverb is ['How', 'many', 'cups', 'does', 'Lee']
Owners1 is ['cups', 'Lee']
Owners2 is []
Entity_Values is ['4', '3']
6 7 ? 2 2


dict_cc_resolve=  {0: {'verb': ['has'], 'pre_verb': ['Lee'], 'after_verb': ['4', 'cups', '.'], 'prp_verb': [], 'Entities': ['cups'], 'Owners1': ['Lee'], 'Owners2': [], 'Entity_Values': ['4', '3']}, 1: {'verb': ['takes'], 'pre_verb': ['Lee'], 'after_verb': ['away', '3', 'cups'], 'prp_verb': ['from', 'Lee', '.'], 'Entities': ['cups'], 'Owners1': ['Lee', 'brother'], 'Owners2': ['Lee'], 'Entity_Values': ['4', '3']}, 2: {'verb': ['have'], 'pre_verb': ['How', 'many', 'cups', 'does', 'Lee'], 'after_verb': ['?'], 'prp_verb': [], 'Entities': ['cups'], 'Owners1': ['cups', 'Lee'], 'Owners2': [], 'Entity_Values': ['4', '3']}}



processed_information:  ['Lee has 4 cups .', 'His brother takes away 3 cups from Lee .']



schema Identification.....



possible_schemas and their sent's indices:  ['Change_Out', 'Change_Out', 'Change_Out', 'Change_Out', 'Change_Out', 'Change_Out', 'Change_Out'] [1, 1, 1, 1, 1, 1, 1]


Identified Unique Schemas:  {'Change_Out'}


In Change Out: 

{'verb': ['takes'], 'pre_verb': ['Lee'], 'after_verb': ['away', '3', 'cups'], 'prp_verb': ['from', 'Lee', '.'], 'Entities': ['cups'], 'Owners1': ['Lee', 'brother'], 'Owners2': ['Lee'], 'Entity_Values': ['4', '3']}
Equation is Y=X-Z
Answer in Natural Language Processing....
Lee takes/has 1 cups

----------------------------------------

sentences:  ['Sam has 8 pencils .', 'He finds 11 more pencils .', 'How many pencils does he have in all ?']
sentences information : 
['Sam has 8 pencils .', 'He finds 11 more pencils .']


Question Related Sentences : 
['How many pencils does he have in all ?']


CC_resolve_pos_dict is  {0: {'Sam': 'NNP', 'has': 'VBZ', '8': 'CD', 'pencils': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Sam': 'NNP', 'has': 'VBZ', '8': 'CD', 'pencils': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Sam': 'NNP', 'has': 'VBZ', '8': 'CD', 'pencils': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'finds': 'VBZ', '11': 'CD', 'more': 'JJR', 'pencils': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Sam': 'NNP', 'has': 'VBZ', '8': 'CD', 'pencils': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'finds': 'VBZ', '11': 'CD', 'more': 'JJR', 'pencils': 'NNS', '.': '.'}}
CC_resolve_pos_dict:  {0: {'Sam': 'NNP', 'has': 'VBZ', '8': 'CD', 'pencils': 'NNS', '.': '.'}, 1: {'He': 'PRP', 'finds': 'VBZ', '11': 'CD', 'more': 'JJR', 'pencils': 'NNS', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'pencils': 'NNS', 'does': 'VBZ', 'he': 'PRP', 'have': 'VB', 'in': 'IN', 'all': 'DT', '?': '.'}}



processed_input:  ['Sam has 8 pencils .', 'He finds 11 more pencils .', 'How many pencils does he have in all ?']




['Sam', 'has', '8', 'pencils', '.'] 99 0

--------------------------

0 5 Sam 0 0
1 5 has 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['8', 'pencils', '.']
Prp_Verb:  []
Entities:  ['pencils']
PREverb is ['Sam']
Owners1 is ['Sam']
Owners2 is []
Entity_Values is ['8']
2 5 8 0 0
3 5 pencils 0 0
4 5 . 0 0


['He', 'finds', '11', 'more', 'pencils', '.'] 99 1

--------------------------

0 6 He 1 1
1 6 finds 1 1
after_verb_tags:  ['CD', 'JJR', 'NNS', '.']
Averb:  ['11', 'more', 'pencils', '.']
Prp_Verb:  []
Entities:  ['pencils']
PREverb is ['Sam']
Owners1 is ['Sam']
Owners2 is []
Entity_Values is ['8', '11']
2 6 11 1 1
3 6 more 1 1
4 6 pencils 1 1
5 6 . 1 1


['How', 'many', 'pencils', 'does', 'he', 'have', 'in', 'all', '?'] 99 2

--------------------------

0 9 How 2 2
1 9 many 2 2
2 9 pencils 2 2
3 9 does 2 2
after_verb_tags:  ['PRP', 'VB', 'IN', 'DT', '.']
Averb:  ['he', 'have']
Prp_Verb:  ['in', 'all', '?']
Entities:  ['pencils']
PREverb is ['How', 'many', 'pencils']
Owners1 is []
Owners2 is []
Entity_Values is ['8', '11']
4 9 he 2 2
5 9 have 2 2
after_verb_tags:  ['IN', 'DT', '.']
Averb:  []
Prp_Verb:  ['in', 'all', '?']
Entities:  ['pencils']
PREverb is ['Sam']
Owners1 is ['Sam']
Owners2 is []
Entity_Values is ['8', '11']
6 9 in 2 2
7 9 all 2 2
8 9 ? 2 2


dict_cc_resolve=  {0: {'verb': ['has'], 'pre_verb': ['Sam'], 'after_verb': ['8', 'pencils', '.'], 'prp_verb': [], 'Entities': ['pencils'], 'Owners1': ['Sam'], 'Owners2': [], 'Entity_Values': ['8', '11']}, 1: {'verb': ['finds'], 'pre_verb': ['Sam'], 'after_verb': ['11', 'more', 'pencils', '.'], 'prp_verb': [], 'Entities': ['pencils'], 'Owners1': ['Sam'], 'Owners2': [], 'Entity_Values': ['8', '11']}, 2: {'verb': ['have'], 'pre_verb': ['Sam'], 'after_verb': [], 'prp_verb': ['in', 'all', '?'], 'Entities': ['pencils'], 'Owners1': ['Sam'], 'Owners2': [], 'Entity_Values': ['8', '11']}}



processed_information:  ['Sam has 8 pencils .', 'He finds 11 more pencils .']



schema Identification.....



possible_schemas and their sent's indices:  ['Increase'] [1]


Identified Unique Schemas:  {'Increase'}


In Increase: 

{'verb': ['finds'], 'pre_verb': ['Sam'], 'after_verb': ['11', 'more', 'pencils', '.'], 'prp_verb': [], 'Entities': ['pencils'], 'Owners1': ['Sam'], 'Owners2': [], 'Entity_Values': ['8', '11']}
Answer in Natural Language Processing....
Sam finds/has 19 pencils

----------------------------------------

sentences:  ['David gave 3 candies to Ruth and John gave 2 candies to David .', 'Now David has 4 candies more than Ruth has .', 'How many candies does David have now if Ruth had 7 candies in the beginning ?']
sentences information : 
['David gave 3 candies to Ruth and John gave 2 candies to David .', 'Now David has 4 candies more than Ruth has .']


Question Related Sentences : 
['How many candies does David have now if Ruth had 7 candies in the beginning ?']


CC_resolve_pos_dict is  {0: {'David': 'NNP', 'gave': 'VBD', '3': 'CD', 'candies': 'NNS', 'to': 'TO', 'Ruth': 'NNP', 'and': 'CC', 'John': 'NNP', '2': 'CD', '.': '.'}}



Original_resolve_pos_dict is  {0: {'David': 'NNP', 'gave': 'VBD', '3': 'CD', 'candies': 'NNS', 'to': 'TO', 'Ruth': 'NNP', 'and': 'CC', 'John': 'NNP', '2': 'CD', '.': '.'}}
Going to CC_Resolve module: 0
CC_resolve_pos_dict is  {0: {'David': 'NNP', 'gave': 'VBD', '3': 'CD', 'candies': 'NNS', 'to': 'TO', 'Ruth': 'NNP', 'and': 'CC', 'John': 'NNP', '2': 'CD', '.': '.'}}





Modified sentence at Conjunction Resolve module is:
 David gave 3 candies to Ruth . John gave 2 candies to David 
CC_resolve_pos_dict is  {0: {'David': 'NNP', 'gave': 'VBD', '3': 'CD', 'candies': 'NNS', 'to': 'TO', 'Ruth': 'NNP', 'and': 'CC', 'John': 'NNP', '2': 'CD', '.': '.'}, 1: {'Now': 'RB', 'David': 'NNP', 'has': 'VBZ', '4': 'CD', 'candies': 'NNS', 'more': 'RBR', 'than': 'IN', 'Ruth': 'NNP', '.': '.'}}



Original_resolve_pos_dict is  {0: {'David': 'NNP', 'gave': 'VBD', '3': 'CD', 'candies': 'NNS', 'to': 'TO', 'Ruth': 'NNP', 'and': 'CC', 'John': 'NNP', '2': 'CD', '.': '.'}, 1: {'Now': 'RB', 'David': 'NNP', 'has': 'VBZ', '4': 'CD', 'candies': 'NNS', 'more': 'RBR', 'than': 'IN', 'Ruth': 'NNP', '.': '.'}}
CC_resolve_pos_dict:  {0: {'David': 'NNP', 'gave': 'VBD', '3': 'CD', 'candies': 'NNS', 'to': 'TO', 'Ruth': 'NNP', 'and': 'CC', 'John': 'NNP', '2': 'CD', '.': '.'}, 1: {'Now': 'RB', 'David': 'NNP', 'has': 'VBZ', '4': 'CD', 'candies': 'NNS', 'more': 'RBR', 'than': 'IN', 'Ruth': 'NNP', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'candies': 'NNS', 'does': 'VBZ', 'David': 'NNP', 'have': 'VB', 'now': 'RB', 'if': 'IN', 'Ruth': 'NNP', 'had': 'VBD', '7': 'CD', 'in': 'IN', 'the': 'DT', 'beginning': 'NN', '?': '.'}}



processed_input:  ['David gave 3 candies to Ruth ', ' John gave 2 candies to David ', 'Now David has 4 candies more than Ruth has .', 'How many candies does David have now if Ruth had 7 candies in the beginning ?']




['David', 'gave', '3', 'candies', 'to', 'Ruth'] 0 0

--------------------------

0 6 David 0 0
1 6 gave 0 0
after_verb_tags:  ['CD', 'NNS', 'TO', 'NNP']
Averb:  ['3', 'candies']
Prp_Verb:  ['to', 'Ruth']
Entities:  ['candies']
PREverb is ['David']
Owners1 is ['David']
Owners2 is ['Ruth']
Entity_Values is ['3']
2 6 3 0 0
3 6 candies 0 0
4 6 to 0 0
5 6 Ruth 0 0


['John', 'gave', '2', 'candies', 'to', 'David'] 0 1

--------------------------

0 6 John 0 1
1 6 gave 0 1
after_verb_tags:  ['CD', 'NNS', 'TO', 'NNP']
Averb:  ['2', 'candies']
Prp_Verb:  ['to', 'David']
Entities:  ['candies']
PREverb is ['John']
Owners1 is ['John']
Owners2 is ['David']
Entity_Values is ['3', '2']
2 6 2 0 1
3 6 candies 0 1
4 6 to 0 1
5 6 David 0 1


['Now', 'David', 'has', '4', 'candies', 'more', 'than', 'Ruth', 'has', '.'] 0 2

--------------------------

0 10 Now 1 2
1 10 David 1 2
2 10 has 1 2
after_verb_tags:  ['CD', 'NNS', 'RBR', 'IN', 'NNP', 'VBZ', '.']
Averb:  ['4', 'candies', 'more']
Prp_Verb:  ['than', 'Ruth', 'has', '.']
Entities:  ['candies']
PREverb is ['Now', 'David']
Owners1 is ['David']
Owners2 is ['Ruth']
Entity_Values is ['3', '2', '4']
3 10 4 1 2
4 10 candies 1 2
5 10 more 1 2
6 10 than 1 2
7 10 Ruth 1 2
8 10 has 1 2
after_verb_tags:  ['.']
Averb:  ['.']
Prp_Verb:  []
Entities:  ['candies']
PREverb is ['Now', 'David', 'has', '4', 'candies', 'more', 'than', 'Ruth']
Owners1 is ['David', 'Ruth']
Owners2 is []
Entity_Values is ['3', '2', '4']
9 10 . 1 2


['How', 'many', 'candies', 'does', 'David', 'have', 'now', 'if', 'Ruth', 'had', '7', 'candies', 'in', 'the', 'beginning', '?'] 0 3

--------------------------

0 16 How 2 3
1 16 many 2 3
2 16 candies 2 3
3 16 does 2 3
after_verb_tags:  ['NNP', 'VB', 'RB', 'IN', 'NNP', 'VBD', 'CD', 'NNS', 'IN', 'DT', 'NN', '.']
Averb:  ['David', 'have', 'now']
Prp_Verb:  ['if', 'Ruth', 'had', '7', 'candies', 'in', 'the', 'beginning', '?']
Entities:  ['candies']
PREverb is ['How', 'many', 'candies']
Owners1 is []
Owners2 is ['David', 'Ruth']
Entity_Values is ['3', '2', '4', 'if']
4 16 David 2 3
5 16 have 2 3
after_verb_tags:  ['RB', 'IN', 'NNP', 'VBD', 'CD', 'NNS', 'IN', 'DT', 'NN', '.']
Averb:  ['now']
Prp_Verb:  ['if', 'Ruth', 'had', '7', 'candies', 'in', 'the', 'beginning', '?']
Entities:  ['candies']
PREverb is ['How', 'many', 'candies', 'does', 'David']
Owners1 is ['David']
Owners2 is ['Ruth']
Entity_Values is ['3', '2', '4', 'if', 'if']
6 16 now 2 3
7 16 if 2 3
8 16 Ruth 2 3
9 16 had 2 3
after_verb_tags:  ['CD', 'NNS', 'IN', 'DT', 'NN', '.']
Averb:  ['7', 'candies']
Prp_Verb:  ['in', 'the', 'beginning', '?']
Entities:  ['candies']
PREverb is ['How', 'many', 'candies', 'does', 'David', 'have', 'now', 'if', 'Ruth']
Owners1 is ['David', 'Ruth']
Owners2 is []
Entity_Values is ['3', '2', '4', 'if', 'if', '7']
10 16 7 2 3
11 16 candies 2 3
12 16 in 2 3
13 16 the 2 3
14 16 beginning 2 3
15 16 ? 2 3


dict_cc_resolve=  {0: {'verb': ['gave'], 'pre_verb': ['David'], 'after_verb': ['3', 'candies'], 'prp_verb': ['to', 'Ruth'], 'Entities': ['candies'], 'Owners1': ['David'], 'Owners2': ['Ruth'], 'Entity_Values': ['3', '2', '4', 'if', 'if', '7']}, 1: {'verb': ['gave'], 'pre_verb': ['John'], 'after_verb': ['2', 'candies'], 'prp_verb': ['to', 'David'], 'Entities': ['candies'], 'Owners1': ['John'], 'Owners2': ['David'], 'Entity_Values': ['3', '2', '4', 'if', 'if', '7']}, 2: {'verb': ['has'], 'pre_verb': ['Now', 'David', 'has', '4', 'candies', 'more', 'than', 'Ruth'], 'after_verb': ['.'], 'prp_verb': [], 'Entities': ['candies'], 'Owners1': ['David', 'Ruth'], 'Owners2': [], 'Entity_Values': ['3', '2', '4', 'if', 'if', '7']}, 3: {'verb': ['had'], 'pre_verb': ['How', 'many', 'candies', 'does', 'David', 'have', 'now', 'if', 'Ruth'], 'after_verb': ['7', 'candies'], 'prp_verb': ['in', 'the', 'beginning', '?'], 'Entities': ['candies'], 'Owners1': ['David', 'Ruth'], 'Owners2': [], 'Entity_Values': ['3', '2', '4', 'if', 'if', '7']}}



processed_information:  ['David gave 3 candies to Ruth ', ' John gave 2 candies to David ', 'Now David has 4 candies more than Ruth has .']



schema Identification.....



possible_schemas and their sent's indices:  ['Change_Out', 'Change_Out', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus', 'Compare_Plus'] [0, 1, 2, 2, 2, 2, 2, 2, 2]


Identified Unique Schemas:  {'Compare_Plus', 'Change_Out'}


In Compare_Plus: 

{'verb': ['gave'], 'pre_verb': ['David'], 'after_verb': ['3', 'candies'], 'prp_verb': ['to', 'Ruth'], 'Entities': ['candies'], 'Owners1': ['David'], 'Owners2': ['Ruth'], 'Entity_Values': ['3', '2', '4', 'if', 'if', '7']}
Answer in Natural Language Processing....
David gave/has 5 candies

----------------------------------------

In Change Out: 

{'verb': ['gave'], 'pre_verb': ['David'], 'after_verb': ['3', 'candies'], 'prp_verb': ['to', 'Ruth'], 'Entities': ['candies'], 'Owners1': ['David'], 'Owners2': ['Ruth'], 'Entity_Values': ['3', '2', '4', 'if', 'if', '7']}
Equation is Y=X-Z
Answer in Natural Language Processing....
David gave/has 1 candies

----------------------------------------

sentences:  ['Ruth had 3 apples .', 'She put 2 apples into a basket .', 'How many apples are there in the basket now if in the beginning there were 4 apples in the basket ?']
sentences information : 
['Ruth had 3 apples .', 'She put 2 apples into a basket .']


Question Related Sentences : 
['How many apples are there in the basket now if in the beginning there were 4 apples in the basket ?']


CC_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'had': 'VBD', '3': 'CD', 'apples': 'NNS', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'had': 'VBD', '3': 'CD', 'apples': 'NNS', '.': '.'}}
CC_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'had': 'VBD', '3': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'She': 'PRP', 'put': 'VBD', '2': 'CD', 'apples': 'NNS', 'into': 'IN', 'a': 'DT', 'basket': 'NN', '.': '.'}}



Original_resolve_pos_dict is  {0: {'Ruth': 'NNP', 'had': 'VBD', '3': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'She': 'PRP', 'put': 'VBD', '2': 'CD', 'apples': 'NNS', 'into': 'IN', 'a': 'DT', 'basket': 'NN', '.': '.'}}
CC_resolve_pos_dict:  {0: {'Ruth': 'NNP', 'had': 'VBD', '3': 'CD', 'apples': 'NNS', '.': '.'}, 1: {'She': 'PRP', 'put': 'VBD', '2': 'CD', 'apples': 'NNS', 'into': 'IN', 'a': 'DT', 'basket': 'NN', '.': '.'}, 2: {'How': 'WRB', 'many': 'JJ', 'apples': 'NNS', 'are': 'VBP', 'there': 'EX', 'in': 'IN', 'the': 'DT', 'basket': 'NN', 'now': 'RB', 'if': 'IN', 'beginning': 'NN', 'were': 'VBD', '4': 'CD', '?': '.'}}



processed_input:  ['Ruth had 3 apples .', 'She put 2 apples into a basket .', 'How many apples are there in the basket now if in the beginning there were 4 apples in the basket ?']




['Ruth', 'had', '3', 'apples', '.'] 0 0

--------------------------

0 5 Ruth 0 0
1 5 had 0 0
after_verb_tags:  ['CD', 'NNS', '.']
Averb:  ['3', 'apples', '.']
Prp_Verb:  []
Entities:  ['apples']
PREverb is ['Ruth']
Owners1 is ['Ruth']
Owners2 is []
Entity_Values is ['3']
2 5 3 0 0
3 5 apples 0 0
4 5 . 0 0


['She', 'put', '2', 'apples', 'into', 'a', 'basket', '.'] 0 1

--------------------------

0 8 She 0 1
